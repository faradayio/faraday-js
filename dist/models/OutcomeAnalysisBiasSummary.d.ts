/**
 * Faraday REST API
 * The [Faraday](https://faraday.ai) API makes it easy to predict customer behavior programmatically.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@faraday.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * A summary of each type of bias distilled down to a boolean value.
 * @export
 * @interface OutcomeAnalysisBiasSummary
 */
export interface OutcomeAnalysisBiasSummary {
    /**
     * This boolean value indicates whether the underlying data used to build an outcome is unbiased.
     *
     * Each sensitive dimension has a similarity metric (taking values in `[0,1]`)
     * to measure the discrepancy between a subpopulation and the overall population.
     *
     * For categorical dimensions, the similarity metric is the maximum absolute difference
     * between subpopulation proportions and overall proportions across all values
     * (e.g. the proportion of positive examples among the female subpopulation
     * is compared to the proportion of positive examples among the overall population).
     *
     * For numeric dimensions, the similarity metric is the Wasserstein distance in one variable
     * (e.g. the Wasserstein distance between the age distribution of positive examples
     * and the overall age distribution) normalized to `[0,1]` by approximating the maximum Wasserstein distance.
     *
     * From each sensitive dimension we obtain 2 or 3 similarity metrics:
     * - The similarity metric comparing the positive examples to the overall population.
     * - The similarity metric comparing the candidates to the overall population.
     * - (Optionally) The similarity metric comparing the negative examples to the overall population.
     *
     * The sensitive dimension is defined to have `low_bias` if the maximum similarity metric is less than `0.1`.
     *
     * The boolean `data_unbiased` is true if all sensitive dimensions are `low_bias` according to the above definition.
     * @type {boolean}
     * @memberof OutcomeAnalysisBiasSummary
     */
    data_unbiased: boolean;
    /**
     * This boolean value indicates that all subpopulations are neither privileged nor disadvantaged using a sum of 4 metrics defined in
     * - Bellamy, Rachel KE, et al. "AI Fairness 360: An extensible toolkit for detecting and mitigating algorithmic bias." IBM Journal of Research and Development 63.4/5 (2019): 4-1.
     *
     * The 4 metrics are:
     * - Equal opportunity difference: The difference between the true positive rate for a subpopulation and the true positive rate for the overall population.
     * - Statistical parity difference: The difference between the proportion of positive predictions for a subpopulation and the proportion of positive predictions for the overall population.
     * - Average odds difference: The average of the equal opportunity difference and the statistical parity difference.
     * - Disparate impact: The ratio of the proportion of positive predictions for a subpopulation and the proportion of positive predictions for the overall population.
     *
     * To compute these metrics, a decision threshold corresponding to a top 5% target population is chosen,
     *
     * The `total_fairness` of a subpopulation is defined as the sum of these 4 fairness metrics.
     *
     * The ideal value for disparate impact is `1.0`, and the ideal value for the other 3 metrics is `0.0`.
     * Thus, the ideal value for the `total_fairness` is `1.0`,
     * and a subpopulation is defined to be `equitably_treated` if the `total_fairness` is between `0.9` and `1.1`.
     *
     * The boolean `fairness_fair` is true if all subpopulations are `equitably_treated` according to the above definition.
     * @type {boolean}
     * @memberof OutcomeAnalysisBiasSummary
     */
    fairness_fair: boolean;
    /**
     * This boolean value indicates whether the predictive performance of an outcome is unbiased across subpopulations.
     *
     * To measure predictive performance, the F1 score, the harmonic mean of precision and recall,
     * is computed at a top 5% decision threshold.
     *
     * The F1 score of the overall population is compared to the F1 score of each subpopulation by computing
     * the relative difference between the F1 scores: `(subpopulation_f1 - overall_f1) / overall_f1`.
     *
     * The subpopulation is defined to be `relatively_unaffected` (neither enhanced or impaired)
     * if the absolute relative difference is less than `0.1`.
     *
     * The boolean `power_unbiased` is true if all subpopulations are `relatively_unaffected` according to the above definition.
     * @type {boolean}
     * @memberof OutcomeAnalysisBiasSummary
     */
    power_unbiased: boolean;
    /**
     * This boolean value indicates that all subpopulations are equally represented among positive predictions.
     *
     * To measure this, a decision threshold corresponding to a top 5% target population is chosen,
     * and the odds ratio is computed for each subpopulation as:
     * `(proportion of subpopulation members in the target population) / (the proportion of subpopulation members among the eligible population)`.
     *
     * A subpopulation is defined to have `low_bias` if the odds ratio is between `0.9` and `1.1`.
     *
     * The boolean `predictions_unbiased` is true if all subpopulations are `low_bias` according to the above definition.
     * @type {boolean}
     * @memberof OutcomeAnalysisBiasSummary
     */
    predictions_unbiased: boolean;
}
export declare function OutcomeAnalysisBiasSummaryFromJSON(json: any): OutcomeAnalysisBiasSummary;
export declare function OutcomeAnalysisBiasSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): OutcomeAnalysisBiasSummary;
export declare function OutcomeAnalysisBiasSummaryToJSON(value?: OutcomeAnalysisBiasSummary | null): any;
