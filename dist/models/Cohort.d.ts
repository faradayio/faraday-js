/**
 * Faraday REST API
 * The [Faraday](https://faraday.ai) API makes it easy to predict customer behavior programmatically.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@faraday.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { CohortPlaceCondition } from './CohortPlaceCondition';
import { CohortStreamCondition } from './CohortStreamCondition';
import { CohortTrait } from './CohortTrait';
import { Recency } from './Recency';
import { ResourceStatus } from './ResourceStatus';
/**
 * A specific group of people, such as "Customers" or "Subscription customers".
 * @export
 * @interface Cohort
 */
export interface Cohort {
    /**
     * A Managed Cohort.
     * @type {boolean}
     * @memberof Cohort
     */
    classic?: boolean;
    /**
     * When this resource was created.
     * @type {Date}
     * @memberof Cohort
     */
    created_at: Date;
    /**
     * Whether to show the Cohort in Explore, the map view on https://app.faraday.ai.
     *
     * This will slow down Cohort builds.
     * @type {boolean}
     * @memberof Cohort
     */
    explore?: boolean;
    /**
     * A unique ID for this resource.
     * @type {string}
     * @memberof Cohort
     */
    id: string;
    /**
     * The last time this resource's input was read.
     * @type {Date}
     * @memberof Cohort
     */
    last_read_input_at?: Date;
    /**
     * The last time this resource's configuration was updated. If this is more recent than last_updated_output_at, the resource will be rebuilt.
     * @type {Date}
     * @memberof Cohort
     */
    last_updated_config_at?: Date;
    /**
     * The last time this resource successfully built.
     * @type {Date}
     * @memberof Cohort
     */
    last_updated_output_at?: Date;
    /**
     * Max count for this cohort's config
     * @type {number}
     * @memberof Cohort
     */
    max_count?: number;
    /**
     * Max value for this cohort's config
     * @type {number}
     * @memberof Cohort
     */
    max_value?: number;
    /**
     * Min count for this cohort's config
     * @type {number}
     * @memberof Cohort
     */
    min_count?: number;
    /**
     * Min value for this cohort's config
     * @type {number}
     * @memberof Cohort
     */
    min_value?: number;
    /**
     * Human-readable label for this cohort.
     * @type {string}
     * @memberof Cohort
     */
    name: string;
    /**
     * List of places to use to spatially filter Cohort membership.
     * @type {Array<CohortPlaceCondition>}
     * @memberof Cohort
     */
    place_conditions?: Array<CohortPlaceCondition>;
    /**
     * Count of the population.
     * @type {number}
     * @memberof Cohort
     */
    population_count?: number;
    /**
     *
     * @type {Recency}
     * @memberof Cohort
     */
    recency?: Recency;
    /**
     * The type of this resource.
     * @type {string}
     * @memberof Cohort
     */
    resource_type: string;
    /**
     *
     * @type {ResourceStatus}
     * @memberof Cohort
     */
    status: ResourceStatus;
    /**
     * When the status of this resource was last updated.
     * @type {Date}
     * @memberof Cohort
     */
    status_changed_at?: Date;
    /**
     * If this resource has `status == "error"`, this will contain an error message.
     * @type {string}
     * @memberof Cohort
     */
    status_error?: string;
    /**
     * List of stream properties to filter cohort membership on. The stream properties must be for the same stream set as the cohort `stream_name`.
     *
     * Nulls are excluded unless explicitly requested with `_null: true`.
     * @type {Array<CohortStreamCondition>}
     * @memberof Cohort
     */
    stream_conditions?: Array<CohortStreamCondition>;
    /**
     * The `name` field of the stream from which to build this cohort.
     * @type {string}
     * @memberof Cohort
     */
    stream_name?: string;
    /**
     * List of traits to filter cohort membership
     * @type {Array<CohortTrait>}
     * @memberof Cohort
     */
    traits?: Array<CohortTrait>;
    /**
     * When this resource was last updated.
     * @type {Date}
     * @memberof Cohort
     */
    updated_at: Date;
}
export declare function CohortFromJSON(json: any): Cohort;
export declare function CohortFromJSONTyped(json: any, ignoreDiscriminator: boolean): Cohort;
export declare function CohortToJSON(value?: Cohort | null): any;
