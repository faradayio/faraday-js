"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Faraday REST API
 * The [Faraday](https://faraday.ai) API makes it easy to predict customer behavior programmatically.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@faraday.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.OutcomeAnalysisFeatureDirectionalityToJSON = exports.OutcomeAnalysisFeatureDirectionalityFromJSONTyped = exports.OutcomeAnalysisFeatureDirectionalityFromJSON = void 0;
const OutcomeAnalysisFeatureDirectionalityBoolean_1 = require("./OutcomeAnalysisFeatureDirectionalityBoolean");
const OutcomeAnalysisFeatureDirectionalityDate_1 = require("./OutcomeAnalysisFeatureDirectionalityDate");
const OutcomeAnalysisFeatureDirectionalityNumber_1 = require("./OutcomeAnalysisFeatureDirectionalityNumber");
const OutcomeAnalysisFeatureDirectionalityText_1 = require("./OutcomeAnalysisFeatureDirectionalityText");
function OutcomeAnalysisFeatureDirectionalityFromJSON(json) {
    return OutcomeAnalysisFeatureDirectionalityFromJSONTyped(json, false);
}
exports.OutcomeAnalysisFeatureDirectionalityFromJSON = OutcomeAnalysisFeatureDirectionalityFromJSON;
function OutcomeAnalysisFeatureDirectionalityFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['data_type']) {
        case 'boolean':
            return Object.assign(Object.assign({}, OutcomeAnalysisFeatureDirectionalityBoolean_1.OutcomeAnalysisFeatureDirectionalityBooleanFromJSONTyped(json, true)), { data_type: 'boolean' });
        case 'date':
            return Object.assign(Object.assign({}, OutcomeAnalysisFeatureDirectionalityDate_1.OutcomeAnalysisFeatureDirectionalityDateFromJSONTyped(json, true)), { data_type: 'date' });
        case 'number':
            return Object.assign(Object.assign({}, OutcomeAnalysisFeatureDirectionalityNumber_1.OutcomeAnalysisFeatureDirectionalityNumberFromJSONTyped(json, true)), { data_type: 'number' });
        case 'text':
            return Object.assign(Object.assign({}, OutcomeAnalysisFeatureDirectionalityText_1.OutcomeAnalysisFeatureDirectionalityTextFromJSONTyped(json, true)), { data_type: 'text' });
        default:
            throw new Error(`No variant of OutcomeAnalysisFeatureDirectionality exists with 'data_type=${json['data_type']}'`);
    }
}
exports.OutcomeAnalysisFeatureDirectionalityFromJSONTyped = OutcomeAnalysisFeatureDirectionalityFromJSONTyped;
function OutcomeAnalysisFeatureDirectionalityToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['data_type']) {
        case 'boolean':
            return OutcomeAnalysisFeatureDirectionalityBoolean_1.OutcomeAnalysisFeatureDirectionalityBooleanToJSON(value);
        case 'date':
            return OutcomeAnalysisFeatureDirectionalityDate_1.OutcomeAnalysisFeatureDirectionalityDateToJSON(value);
        case 'number':
            return OutcomeAnalysisFeatureDirectionalityNumber_1.OutcomeAnalysisFeatureDirectionalityNumberToJSON(value);
        case 'text':
            return OutcomeAnalysisFeatureDirectionalityText_1.OutcomeAnalysisFeatureDirectionalityTextToJSON(value);
        default:
            throw new Error(`No variant of OutcomeAnalysisFeatureDirectionality exists with 'data_type=${value['data_type']}'`);
    }
}
exports.OutcomeAnalysisFeatureDirectionalityToJSON = OutcomeAnalysisFeatureDirectionalityToJSON;
