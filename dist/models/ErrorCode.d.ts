/**
 * Faraday REST API
 * The [Faraday](https://faraday.ai) API makes it easy to predict customer behavior programmatically.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@faraday.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * A Faraday error code.
 *
 * Some possible values include:
 *
 * **Generic HTTP Errors**
 *
 * - BAD_REQUEST: The request could not be validated.
 * - FORBIDDEN: You do not have permission to access the specified resource.
 * - MAX_RESOURCES_REACHED: You have created too many of this resource type on your account. You must delete some before making more.
 * - INTERNAL_SERVER_ERROR: An internal error of an unknown type occurred.
 * - INVALID_AUTHORIZATION: The Authorization header could not be parsed.
 * - NOT_FOUND: The specified resource could not be found.
 *
 * **Authentication**
 *
 * These are specific to HTTP 401 responses.
 *
 * - MALFORMED_API_KEY: Could not parse the supplied API key.
 * - MISSING_API_KEY: An API key was not supplied.
 * - EXPIRED_API_KEY: The supplied API key has expired.
 *
 * **Application Errors**
 *
 * - VALIDATION_FAILED: A parameter or request could not be validated.
 * - CONFLICT: The request was formatted correctly, but conflicted with an existing resource
 * @export
 * @enum {string}
 */
export declare enum ErrorCode {
    BadRequest = "BAD_REQUEST",
    Forbidden = "FORBIDDEN",
    MaxResourcesReached = "MAX_RESOURCES_REACHED",
    InternalServerError = "INTERNAL_SERVER_ERROR",
    InvalidAuthorization = "INVALID_AUTHORIZATION",
    NotFound = "NOT_FOUND",
    MalformedApiKey = "MALFORMED_API_KEY",
    MissingApiKey = "MISSING_API_KEY",
    ExpiredApiKey = "EXPIRED_API_KEY",
    ValidationFailed = "VALIDATION_FAILED",
    Conflict = "CONFLICT"
}
export declare function ErrorCodeFromJSON(json: any): ErrorCode;
export declare function ErrorCodeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ErrorCode;
export declare function ErrorCodeToJSON(value?: ErrorCode | null): any;
