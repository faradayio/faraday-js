"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Faraday REST API
 * The [Faraday](https://faraday.ai) API makes it easy to predict customer behavior programmatically.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@faraday.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ErrorCodeToJSON = exports.ErrorCodeFromJSONTyped = exports.ErrorCodeFromJSON = exports.ErrorCode = void 0;
/**
 * A Faraday error code.
 *
 * Some possible values include:
 *
 * **Generic HTTP Errors**
 *
 * - BAD_REQUEST: The request could not be validated.
 * - FORBIDDEN: You do not have permission to access the specified resource.
 * - MAX_RESOURCES_REACHED: You have created too many of this resource type on your account. You must delete some before making more.
 * - INTERNAL_SERVER_ERROR: An internal error of an unknown type occurred.
 * - INVALID_AUTHORIZATION: The Authorization header could not be parsed.
 * - NOT_FOUND: The specified resource could not be found.
 *
 * **Authentication**
 *
 * These are specific to HTTP 401 responses.
 *
 * - MALFORMED_API_KEY: Could not parse the supplied API key.
 * - MISSING_API_KEY: An API key was not supplied.
 * - EXPIRED_API_KEY: The supplied API key has expired.
 *
 * **Application Errors**
 *
 * - VALIDATION_FAILED: A parameter or request could not be validated.
 * - CONFLICT: The request was formatted correctly, but conflicted with an existing resource
 * @export
 * @enum {string}
 */
var ErrorCode;
(function (ErrorCode) {
    ErrorCode["BadRequest"] = "BAD_REQUEST";
    ErrorCode["Forbidden"] = "FORBIDDEN";
    ErrorCode["MaxResourcesReached"] = "MAX_RESOURCES_REACHED";
    ErrorCode["InternalServerError"] = "INTERNAL_SERVER_ERROR";
    ErrorCode["InvalidAuthorization"] = "INVALID_AUTHORIZATION";
    ErrorCode["NotFound"] = "NOT_FOUND";
    ErrorCode["MalformedApiKey"] = "MALFORMED_API_KEY";
    ErrorCode["MissingApiKey"] = "MISSING_API_KEY";
    ErrorCode["ExpiredApiKey"] = "EXPIRED_API_KEY";
    ErrorCode["ValidationFailed"] = "VALIDATION_FAILED";
    ErrorCode["Conflict"] = "CONFLICT";
})(ErrorCode = exports.ErrorCode || (exports.ErrorCode = {}));
function ErrorCodeFromJSON(json) {
    return ErrorCodeFromJSONTyped(json, false);
}
exports.ErrorCodeFromJSON = ErrorCodeFromJSON;
function ErrorCodeFromJSONTyped(json, ignoreDiscriminator) {
    return json;
}
exports.ErrorCodeFromJSONTyped = ErrorCodeFromJSONTyped;
function ErrorCodeToJSON(value) {
    return value;
}
exports.ErrorCodeToJSON = ErrorCodeToJSON;
