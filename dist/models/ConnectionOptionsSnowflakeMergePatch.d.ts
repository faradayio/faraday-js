/**
 * Faraday REST API
 * The [Faraday](https://faraday.ai) API makes it easy to predict customer behavior programmatically.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@faraday.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * (Parameters used to PATCH the `ConnectionOptionsSnowflake` type.)
 *
 * Snowflake connection options
 * @export
 * @interface ConnectionOptionsSnowflakeMergePatch
 */
export interface ConnectionOptionsSnowflakeMergePatch {
    /**
     * Snowflake account name. If provided, also provide organization name. Preferred over legacy account locator. https://docs.snowflake.com/en/user-guide/admin-account-identifier.html#format-1-preferred-account-name-in-your-organization.
     * @type {string}
     * @memberof ConnectionOptionsSnowflakeMergePatch
     */
    account_name?: string | null;
    /**
     * Database
     * @type {string}
     * @memberof ConnectionOptionsSnowflakeMergePatch
     */
    database?: string;
    /**
     * Not needed if organization name is provided. If your Snowflake account existed before the Organizations feature was enabled, the Format 2 (Legacy): Account Locator in a Region is used as the account name.
     * @type {string}
     * @memberof ConnectionOptionsSnowflakeMergePatch
     */
    legacy_account_locator?: string | null;
    /**
     * Snowflake organization name. If provided, also provide account name. Preferred over legacy account locator. https://docs.snowflake.com/en/user-guide/admin-account-identifier.html#format-1-preferred-account-name-in-your-organization.
     * @type {string}
     * @memberof ConnectionOptionsSnowflakeMergePatch
     */
    organization_name?: string | null;
    /**
     * The Snowflake role that will be used by Faraday to connect to the instance (Usually this is FARADAY)
     * @type {string}
     * @memberof ConnectionOptionsSnowflakeMergePatch
     */
    role?: string;
    /**
     * Schema
     * @type {string}
     * @memberof ConnectionOptionsSnowflakeMergePatch
     */
    schema?: string;
    /**
     * The type of connection
     * @type {string}
     * @memberof ConnectionOptionsSnowflakeMergePatch
     */
    type: string;
    /**
     * Snowflake user.
     * @type {string}
     * @memberof ConnectionOptionsSnowflakeMergePatch
     */
    user?: string;
    /**
     * Warehouse
     * @type {string}
     * @memberof ConnectionOptionsSnowflakeMergePatch
     */
    warehouse?: string;
}
export declare function ConnectionOptionsSnowflakeMergePatchFromJSON(json: any): ConnectionOptionsSnowflakeMergePatch;
export declare function ConnectionOptionsSnowflakeMergePatchFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConnectionOptionsSnowflakeMergePatch;
export declare function ConnectionOptionsSnowflakeMergePatchToJSON(value?: ConnectionOptionsSnowflakeMergePatch | null): any;
