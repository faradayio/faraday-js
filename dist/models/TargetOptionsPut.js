"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Faraday REST API
 * The [Faraday](https://faraday.ai) API makes it easy to predict customer behavior programmatically.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@faraday.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TargetOptionsPutToJSON = exports.TargetOptionsPutFromJSONTyped = exports.TargetOptionsPutFromJSON = void 0;
const TargetOptionsAwsAuroraMysqlPut_1 = require("./TargetOptionsAwsAuroraMysqlPut");
const TargetOptionsAwsAuroraPostgresPut_1 = require("./TargetOptionsAwsAuroraPostgresPut");
const TargetOptionsAwsRdsMysqlPut_1 = require("./TargetOptionsAwsRdsMysqlPut");
const TargetOptionsAwsRdsPostgresPut_1 = require("./TargetOptionsAwsRdsPostgresPut");
const TargetOptionsAwsRdsSqlServerPut_1 = require("./TargetOptionsAwsRdsSqlServerPut");
const TargetOptionsAwsRedshiftServerlessPut_1 = require("./TargetOptionsAwsRedshiftServerlessPut");
const TargetOptionsAzureSqlServerPut_1 = require("./TargetOptionsAzureSqlServerPut");
const TargetOptionsBigQueryPut_1 = require("./TargetOptionsBigQueryPut");
const TargetOptionsFacebookCustomAudiencesPut_1 = require("./TargetOptionsFacebookCustomAudiencesPut");
const TargetOptionsGcpCloudSqlMysqlPut_1 = require("./TargetOptionsGcpCloudSqlMysqlPut");
const TargetOptionsGcpCloudSqlPostgresPut_1 = require("./TargetOptionsGcpCloudSqlPostgresPut");
const TargetOptionsGcpCloudSqlSqlServerPut_1 = require("./TargetOptionsGcpCloudSqlSqlServerPut");
const TargetOptionsGcpGcsCsvPut_1 = require("./TargetOptionsGcpGcsCsvPut");
const TargetOptionsGoogleAdsPut_1 = require("./TargetOptionsGoogleAdsPut");
const TargetOptionsHostedCsvPut_1 = require("./TargetOptionsHostedCsvPut");
const TargetOptionsHubspotPut_1 = require("./TargetOptionsHubspotPut");
const TargetOptionsIterablePut_1 = require("./TargetOptionsIterablePut");
const TargetOptionsKlaviyoPut_1 = require("./TargetOptionsKlaviyoPut");
const TargetOptionsLinkedinAdsPut_1 = require("./TargetOptionsLinkedinAdsPut");
const TargetOptionsLookupApiPut_1 = require("./TargetOptionsLookupApiPut");
const TargetOptionsMysqlPut_1 = require("./TargetOptionsMysqlPut");
const TargetOptionsPinterestAdsPut_1 = require("./TargetOptionsPinterestAdsPut");
const TargetOptionsPoplarPut_1 = require("./TargetOptionsPoplarPut");
const TargetOptionsPostgresPut_1 = require("./TargetOptionsPostgresPut");
const TargetOptionsRedshiftPut_1 = require("./TargetOptionsRedshiftPut");
const TargetOptionsS3CsvPut_1 = require("./TargetOptionsS3CsvPut");
const TargetOptionsSalesforceMarketingCloudPut_1 = require("./TargetOptionsSalesforceMarketingCloudPut");
const TargetOptionsSalesforcePut_1 = require("./TargetOptionsSalesforcePut");
const TargetOptionsSegmentPut_1 = require("./TargetOptionsSegmentPut");
const TargetOptionsSftpPut_1 = require("./TargetOptionsSftpPut");
const TargetOptionsSnowflakePut_1 = require("./TargetOptionsSnowflakePut");
const TargetOptionsSqlServerPut_1 = require("./TargetOptionsSqlServerPut");
const TargetOptionsTheTradeDeskPut_1 = require("./TargetOptionsTheTradeDeskPut");
const TargetOptionsTiktokPut_1 = require("./TargetOptionsTiktokPut");
function TargetOptionsPutFromJSON(json) {
    return TargetOptionsPutFromJSONTyped(json, false);
}
exports.TargetOptionsPutFromJSON = TargetOptionsPutFromJSON;
function TargetOptionsPutFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['type']) {
        case 'aws_aurora_mysql':
            return Object.assign(Object.assign({}, TargetOptionsAwsAuroraMysqlPut_1.TargetOptionsAwsAuroraMysqlPutFromJSONTyped(json, true)), { type: 'aws_aurora_mysql' });
        case 'aws_aurora_postgres':
            return Object.assign(Object.assign({}, TargetOptionsAwsAuroraPostgresPut_1.TargetOptionsAwsAuroraPostgresPutFromJSONTyped(json, true)), { type: 'aws_aurora_postgres' });
        case 'aws_rds_mysql':
            return Object.assign(Object.assign({}, TargetOptionsAwsRdsMysqlPut_1.TargetOptionsAwsRdsMysqlPutFromJSONTyped(json, true)), { type: 'aws_rds_mysql' });
        case 'aws_rds_postgres':
            return Object.assign(Object.assign({}, TargetOptionsAwsRdsPostgresPut_1.TargetOptionsAwsRdsPostgresPutFromJSONTyped(json, true)), { type: 'aws_rds_postgres' });
        case 'aws_rds_sql_server':
            return Object.assign(Object.assign({}, TargetOptionsAwsRdsSqlServerPut_1.TargetOptionsAwsRdsSqlServerPutFromJSONTyped(json, true)), { type: 'aws_rds_sql_server' });
        case 'aws_redshift_serverless':
            return Object.assign(Object.assign({}, TargetOptionsAwsRedshiftServerlessPut_1.TargetOptionsAwsRedshiftServerlessPutFromJSONTyped(json, true)), { type: 'aws_redshift_serverless' });
        case 'azure_sql_server':
            return Object.assign(Object.assign({}, TargetOptionsAzureSqlServerPut_1.TargetOptionsAzureSqlServerPutFromJSONTyped(json, true)), { type: 'azure_sql_server' });
        case 'bigquery':
            return Object.assign(Object.assign({}, TargetOptionsBigQueryPut_1.TargetOptionsBigQueryPutFromJSONTyped(json, true)), { type: 'bigquery' });
        case 'facebook_custom_audiences':
            return Object.assign(Object.assign({}, TargetOptionsFacebookCustomAudiencesPut_1.TargetOptionsFacebookCustomAudiencesPutFromJSONTyped(json, true)), { type: 'facebook_custom_audiences' });
        case 'gcp_cloud_sql_mysql':
            return Object.assign(Object.assign({}, TargetOptionsGcpCloudSqlMysqlPut_1.TargetOptionsGcpCloudSqlMysqlPutFromJSONTyped(json, true)), { type: 'gcp_cloud_sql_mysql' });
        case 'gcp_cloud_sql_postgres':
            return Object.assign(Object.assign({}, TargetOptionsGcpCloudSqlPostgresPut_1.TargetOptionsGcpCloudSqlPostgresPutFromJSONTyped(json, true)), { type: 'gcp_cloud_sql_postgres' });
        case 'gcp_cloud_sql_sql_server':
            return Object.assign(Object.assign({}, TargetOptionsGcpCloudSqlSqlServerPut_1.TargetOptionsGcpCloudSqlSqlServerPutFromJSONTyped(json, true)), { type: 'gcp_cloud_sql_sql_server' });
        case 'gcp_gcs_csv':
            return Object.assign(Object.assign({}, TargetOptionsGcpGcsCsvPut_1.TargetOptionsGcpGcsCsvPutFromJSONTyped(json, true)), { type: 'gcp_gcs_csv' });
        case 'google_ads':
            return Object.assign(Object.assign({}, TargetOptionsGoogleAdsPut_1.TargetOptionsGoogleAdsPutFromJSONTyped(json, true)), { type: 'google_ads' });
        case 'hosted_csv':
            return Object.assign(Object.assign({}, TargetOptionsHostedCsvPut_1.TargetOptionsHostedCsvPutFromJSONTyped(json, true)), { type: 'hosted_csv' });
        case 'hubspot':
            return Object.assign(Object.assign({}, TargetOptionsHubspotPut_1.TargetOptionsHubspotPutFromJSONTyped(json, true)), { type: 'hubspot' });
        case 'iterable':
            return Object.assign(Object.assign({}, TargetOptionsIterablePut_1.TargetOptionsIterablePutFromJSONTyped(json, true)), { type: 'iterable' });
        case 'klaviyo':
            return Object.assign(Object.assign({}, TargetOptionsKlaviyoPut_1.TargetOptionsKlaviyoPutFromJSONTyped(json, true)), { type: 'klaviyo' });
        case 'linkedin_ads':
            return Object.assign(Object.assign({}, TargetOptionsLinkedinAdsPut_1.TargetOptionsLinkedinAdsPutFromJSONTyped(json, true)), { type: 'linkedin_ads' });
        case 'lookup_api':
            return Object.assign(Object.assign({}, TargetOptionsLookupApiPut_1.TargetOptionsLookupApiPutFromJSONTyped(json, true)), { type: 'lookup_api' });
        case 'mysql':
            return Object.assign(Object.assign({}, TargetOptionsMysqlPut_1.TargetOptionsMysqlPutFromJSONTyped(json, true)), { type: 'mysql' });
        case 'pinterest_ads':
            return Object.assign(Object.assign({}, TargetOptionsPinterestAdsPut_1.TargetOptionsPinterestAdsPutFromJSONTyped(json, true)), { type: 'pinterest_ads' });
        case 'poplar':
            return Object.assign(Object.assign({}, TargetOptionsPoplarPut_1.TargetOptionsPoplarPutFromJSONTyped(json, true)), { type: 'poplar' });
        case 'postgres':
            return Object.assign(Object.assign({}, TargetOptionsPostgresPut_1.TargetOptionsPostgresPutFromJSONTyped(json, true)), { type: 'postgres' });
        case 'redshift':
            return Object.assign(Object.assign({}, TargetOptionsRedshiftPut_1.TargetOptionsRedshiftPutFromJSONTyped(json, true)), { type: 'redshift' });
        case 's3_csv':
            return Object.assign(Object.assign({}, TargetOptionsS3CsvPut_1.TargetOptionsS3CsvPutFromJSONTyped(json, true)), { type: 's3_csv' });
        case 'salesforce':
            return Object.assign(Object.assign({}, TargetOptionsSalesforcePut_1.TargetOptionsSalesforcePutFromJSONTyped(json, true)), { type: 'salesforce' });
        case 'salesforce_marketing_cloud':
            return Object.assign(Object.assign({}, TargetOptionsSalesforceMarketingCloudPut_1.TargetOptionsSalesforceMarketingCloudPutFromJSONTyped(json, true)), { type: 'salesforce_marketing_cloud' });
        case 'segment':
            return Object.assign(Object.assign({}, TargetOptionsSegmentPut_1.TargetOptionsSegmentPutFromJSONTyped(json, true)), { type: 'segment' });
        case 'sftp':
            return Object.assign(Object.assign({}, TargetOptionsSftpPut_1.TargetOptionsSftpPutFromJSONTyped(json, true)), { type: 'sftp' });
        case 'snowflake':
            return Object.assign(Object.assign({}, TargetOptionsSnowflakePut_1.TargetOptionsSnowflakePutFromJSONTyped(json, true)), { type: 'snowflake' });
        case 'sql_server':
            return Object.assign(Object.assign({}, TargetOptionsSqlServerPut_1.TargetOptionsSqlServerPutFromJSONTyped(json, true)), { type: 'sql_server' });
        case 'the_trade_desk':
            return Object.assign(Object.assign({}, TargetOptionsTheTradeDeskPut_1.TargetOptionsTheTradeDeskPutFromJSONTyped(json, true)), { type: 'the_trade_desk' });
        case 'tiktok':
            return Object.assign(Object.assign({}, TargetOptionsTiktokPut_1.TargetOptionsTiktokPutFromJSONTyped(json, true)), { type: 'tiktok' });
        default:
            throw new Error(`No variant of TargetOptionsPut exists with 'type=${json['type']}'`);
    }
}
exports.TargetOptionsPutFromJSONTyped = TargetOptionsPutFromJSONTyped;
function TargetOptionsPutToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['type']) {
        case 'aws_aurora_mysql':
            return TargetOptionsAwsAuroraMysqlPut_1.TargetOptionsAwsAuroraMysqlPutToJSON(value);
        case 'aws_aurora_postgres':
            return TargetOptionsAwsAuroraPostgresPut_1.TargetOptionsAwsAuroraPostgresPutToJSON(value);
        case 'aws_rds_mysql':
            return TargetOptionsAwsRdsMysqlPut_1.TargetOptionsAwsRdsMysqlPutToJSON(value);
        case 'aws_rds_postgres':
            return TargetOptionsAwsRdsPostgresPut_1.TargetOptionsAwsRdsPostgresPutToJSON(value);
        case 'aws_rds_sql_server':
            return TargetOptionsAwsRdsSqlServerPut_1.TargetOptionsAwsRdsSqlServerPutToJSON(value);
        case 'aws_redshift_serverless':
            return TargetOptionsAwsRedshiftServerlessPut_1.TargetOptionsAwsRedshiftServerlessPutToJSON(value);
        case 'azure_sql_server':
            return TargetOptionsAzureSqlServerPut_1.TargetOptionsAzureSqlServerPutToJSON(value);
        case 'bigquery':
            return TargetOptionsBigQueryPut_1.TargetOptionsBigQueryPutToJSON(value);
        case 'facebook_custom_audiences':
            return TargetOptionsFacebookCustomAudiencesPut_1.TargetOptionsFacebookCustomAudiencesPutToJSON(value);
        case 'gcp_cloud_sql_mysql':
            return TargetOptionsGcpCloudSqlMysqlPut_1.TargetOptionsGcpCloudSqlMysqlPutToJSON(value);
        case 'gcp_cloud_sql_postgres':
            return TargetOptionsGcpCloudSqlPostgresPut_1.TargetOptionsGcpCloudSqlPostgresPutToJSON(value);
        case 'gcp_cloud_sql_sql_server':
            return TargetOptionsGcpCloudSqlSqlServerPut_1.TargetOptionsGcpCloudSqlSqlServerPutToJSON(value);
        case 'gcp_gcs_csv':
            return TargetOptionsGcpGcsCsvPut_1.TargetOptionsGcpGcsCsvPutToJSON(value);
        case 'google_ads':
            return TargetOptionsGoogleAdsPut_1.TargetOptionsGoogleAdsPutToJSON(value);
        case 'hosted_csv':
            return TargetOptionsHostedCsvPut_1.TargetOptionsHostedCsvPutToJSON(value);
        case 'hubspot':
            return TargetOptionsHubspotPut_1.TargetOptionsHubspotPutToJSON(value);
        case 'iterable':
            return TargetOptionsIterablePut_1.TargetOptionsIterablePutToJSON(value);
        case 'klaviyo':
            return TargetOptionsKlaviyoPut_1.TargetOptionsKlaviyoPutToJSON(value);
        case 'linkedin_ads':
            return TargetOptionsLinkedinAdsPut_1.TargetOptionsLinkedinAdsPutToJSON(value);
        case 'lookup_api':
            return TargetOptionsLookupApiPut_1.TargetOptionsLookupApiPutToJSON(value);
        case 'mysql':
            return TargetOptionsMysqlPut_1.TargetOptionsMysqlPutToJSON(value);
        case 'pinterest_ads':
            return TargetOptionsPinterestAdsPut_1.TargetOptionsPinterestAdsPutToJSON(value);
        case 'poplar':
            return TargetOptionsPoplarPut_1.TargetOptionsPoplarPutToJSON(value);
        case 'postgres':
            return TargetOptionsPostgresPut_1.TargetOptionsPostgresPutToJSON(value);
        case 'redshift':
            return TargetOptionsRedshiftPut_1.TargetOptionsRedshiftPutToJSON(value);
        case 's3_csv':
            return TargetOptionsS3CsvPut_1.TargetOptionsS3CsvPutToJSON(value);
        case 'salesforce':
            return TargetOptionsSalesforcePut_1.TargetOptionsSalesforcePutToJSON(value);
        case 'salesforce_marketing_cloud':
            return TargetOptionsSalesforceMarketingCloudPut_1.TargetOptionsSalesforceMarketingCloudPutToJSON(value);
        case 'segment':
            return TargetOptionsSegmentPut_1.TargetOptionsSegmentPutToJSON(value);
        case 'sftp':
            return TargetOptionsSftpPut_1.TargetOptionsSftpPutToJSON(value);
        case 'snowflake':
            return TargetOptionsSnowflakePut_1.TargetOptionsSnowflakePutToJSON(value);
        case 'sql_server':
            return TargetOptionsSqlServerPut_1.TargetOptionsSqlServerPutToJSON(value);
        case 'the_trade_desk':
            return TargetOptionsTheTradeDeskPut_1.TargetOptionsTheTradeDeskPutToJSON(value);
        case 'tiktok':
            return TargetOptionsTiktokPut_1.TargetOptionsTiktokPutToJSON(value);
        default:
            throw new Error(`No variant of TargetOptionsPut exists with 'type=${value['type']}'`);
    }
}
exports.TargetOptionsPutToJSON = TargetOptionsPutToJSON;
