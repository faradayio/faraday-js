/**
 * Faraday REST API
 * The [Faraday](https://faraday.ai) API makes it easy to predict customer behavior programmatically.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@faraday.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { OutcomeAnalysisBiasDataAgeDistributionDatum } from './OutcomeAnalysisBiasDataAgeDistributionDatum';
/**
 * The age distributions among positive examples, candidates, and negative examples
 * along with a `level` that describes the bias.
 * @export
 * @interface OutcomeAnalysisBiasDataAgeDistribution
 */
export interface OutcomeAnalysisBiasDataAgeDistribution {
    /**
     *
     * @type {OutcomeAnalysisBiasDataAgeDistributionDatum}
     * @memberof OutcomeAnalysisBiasDataAgeDistribution
     */
    candidates: OutcomeAnalysisBiasDataAgeDistributionDatum;
    /**
     * Let `w(l)` denote the Wasserstein distance between the age distribution of individuals with label `l`
     * and the age distribution of all individuals.
     * Specifically, the implement
     *
     * Let `w` denote the maximum of `w(l)` over all values of `l` in (positives, candidates, negatives).
     *
     * Let `w_max` denote the maximum possible Wasserstein distance between two age distributions
     * approximated by the range of ages in the eligible population.
     *
     * Let `w' = w / w_max` be the normalized Wasserstein distance.
     *
     * The `level` is defined to be `low_bias` if `w' < 0.1`, `moderate_bias` if `w' < 0.2`, and `strong_bias` otherwise.
     *
     * Note: The Wasserstein distance is computed using the `wasserstein_distance` function from the `scipy.stats` package.
     * - [https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.wasserstein_distance.html](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.wasserstein_distance.html)
     * @type {string}
     * @memberof OutcomeAnalysisBiasDataAgeDistribution
     */
    level: OutcomeAnalysisBiasDataAgeDistributionLevelEnum;
    /**
     *
     * @type {OutcomeAnalysisBiasDataAgeDistributionDatum}
     * @memberof OutcomeAnalysisBiasDataAgeDistribution
     */
    negatives?: OutcomeAnalysisBiasDataAgeDistributionDatum;
    /**
     *
     * @type {OutcomeAnalysisBiasDataAgeDistributionDatum}
     * @memberof OutcomeAnalysisBiasDataAgeDistribution
     */
    positives: OutcomeAnalysisBiasDataAgeDistributionDatum;
}
/**
* @export
* @enum {string}
*/
export declare enum OutcomeAnalysisBiasDataAgeDistributionLevelEnum {
    LowBias = "low_bias",
    ModerateBias = "moderate_bias",
    StrongBias = "strong_bias"
}
export declare function OutcomeAnalysisBiasDataAgeDistributionFromJSON(json: any): OutcomeAnalysisBiasDataAgeDistribution;
export declare function OutcomeAnalysisBiasDataAgeDistributionFromJSONTyped(json: any, ignoreDiscriminator: boolean): OutcomeAnalysisBiasDataAgeDistribution;
export declare function OutcomeAnalysisBiasDataAgeDistributionToJSON(value?: OutcomeAnalysisBiasDataAgeDistribution | null): any;
