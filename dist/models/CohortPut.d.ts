/**
 * Faraday REST API
 * The [Faraday](https://faraday.ai) API makes it easy to predict customer behavior programmatically.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@faraday.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { CohortPlaceCondition } from './CohortPlaceCondition';
import { CohortStreamCondition } from './CohortStreamCondition';
import { CohortTrait } from './CohortTrait';
import { RecencyPut } from './RecencyPut';
/**
 * (Parameters used to PUT a value of the `Cohort` type.)
 *
 * A specific group of people, such as "Customers" or "Subscription customers".
 * @export
 * @interface CohortPut
 */
export interface CohortPut {
    /**
     * Whether to show the Cohort in Explore, the map view on https://app.faraday.ai.
     *
     * This will slow down Cohort builds.
     * @type {boolean}
     * @memberof CohortPut
     */
    explore?: boolean;
    /**
     * Max count for this cohort's config
     * @type {number}
     * @memberof CohortPut
     */
    max_count?: number;
    /**
     * Max value for this cohort's config
     * @type {number}
     * @memberof CohortPut
     */
    max_value?: number;
    /**
     * Min count for this cohort's config
     * @type {number}
     * @memberof CohortPut
     */
    min_count?: number;
    /**
     * Min value for this cohort's config
     * @type {number}
     * @memberof CohortPut
     */
    min_value?: number;
    /**
     * Human-readable label for this cohort.
     * @type {string}
     * @memberof CohortPut
     */
    name: string;
    /**
     * List of places to use to spatially filter Cohort membership.
     * @type {Array<CohortPlaceCondition>}
     * @memberof CohortPut
     */
    place_conditions?: Array<CohortPlaceCondition>;
    /**
     *
     * @type {RecencyPut}
     * @memberof CohortPut
     */
    recency?: RecencyPut;
    /**
     * List of stream properties to filter cohort membership on. The stream properties must be for the same stream set as the cohort `stream_name`.
     *
     * Nulls are excluded unless explicitly requested with `_null: true`.
     * @type {Array<CohortStreamCondition>}
     * @memberof CohortPut
     */
    stream_conditions?: Array<CohortStreamCondition>;
    /**
     * The `name` field of the stream from which to build this cohort.
     * @type {string}
     * @memberof CohortPut
     */
    stream_name?: string;
    /**
     * List of traits to filter cohort membership
     * @type {Array<CohortTrait>}
     * @memberof CohortPut
     */
    traits?: Array<CohortTrait>;
}
export declare function CohortPutFromJSON(json: any): CohortPut;
export declare function CohortPutFromJSONTyped(json: any, ignoreDiscriminator: boolean): CohortPut;
export declare function CohortPutToJSON(value?: CohortPut | null): any;
