/**
 * Faraday REST API
 * The [Faraday](https://faraday.ai) API makes it easy to predict customer behavior programmatically.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@faraday.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { ArchiveConfig, MarketOpportunityAnalysis, MarketOpportunityAnalysisMergePatch, MarketOpportunityAnalysisPost } from '../models';
export interface ArchiveMarketOpportunityAnalysisRequest {
    marketOpportunityAnalysisId: string;
    archiveConfig: ArchiveConfig;
}
export interface CreateMarketOpportunityAnalysisRequest {
    marketOpportunityAnalysisFields: MarketOpportunityAnalysisPost;
}
export interface DeleteMarketOpportunityAnalysisRequest {
    marketOpportunityAnalysisId: string;
}
export interface GetMarketOpportunityAnalysisRequest {
    marketOpportunityAnalysisId: string;
}
export interface UnarchiveMarketOpportunityAnalysisRequest {
    marketOpportunityAnalysisId: string;
    archiveConfig: ArchiveConfig;
}
export interface UpdateMarketOpportunityAnalysisRequest {
    marketOpportunityAnalysisId: string;
    marketOpportunityAnalysisFields: MarketOpportunityAnalysisMergePatch;
}
/**
 *
 */
export declare class MarketOpportunityAnalysesApi extends runtime.BaseAPI {
    /**
     * Archive a specific market opportunity analysis
     */
    private archiveMarketOpportunityAnalysisRaw;
    /**
     * Archive a specific market opportunity analysis
     */
    archiveMarketOpportunityAnalysis(marketOpportunityAnalysisId: string, archiveConfig: ArchiveConfig): Promise<void>;
    /**
     * Create a new market opportunity analysis
     */
    private createMarketOpportunityAnalysisRaw;
    /**
     * Create a new market opportunity analysis
     */
    createMarketOpportunityAnalysis(marketOpportunityAnalysisFields: MarketOpportunityAnalysisPost): Promise<MarketOpportunityAnalysis>;
    /**
     * Delete a specific market opportunity analysis
     */
    private deleteMarketOpportunityAnalysisRaw;
    /**
     * Delete a specific market opportunity analysis
     */
    deleteMarketOpportunityAnalysis(marketOpportunityAnalysisId: string): Promise<void>;
    /**
     * Get all market opportunity analyses
     */
    private getMarketOpportunityAnalysesRaw;
    /**
     * Get all market opportunity analyses
     */
    getMarketOpportunityAnalyses(): Promise<Array<MarketOpportunityAnalysis>>;
    /**
     * Get a specific market opportunity analysis
     */
    private getMarketOpportunityAnalysisRaw;
    /**
     * Get a specific market opportunity analysis
     */
    getMarketOpportunityAnalysis(marketOpportunityAnalysisId: string): Promise<MarketOpportunityAnalysis>;
    /**
     * Unarchive a specific market opportunity analysis
     */
    private unarchiveMarketOpportunityAnalysisRaw;
    /**
     * Unarchive a specific market opportunity analysis
     */
    unarchiveMarketOpportunityAnalysis(marketOpportunityAnalysisId: string, archiveConfig: ArchiveConfig): Promise<void>;
    /**
     * Update a specific market opportunity analysis
     */
    private updateMarketOpportunityAnalysisRaw;
    /**
     * Update a specific market opportunity analysis
     */
    updateMarketOpportunityAnalysis(marketOpportunityAnalysisId: string, marketOpportunityAnalysisFields: MarketOpportunityAnalysisMergePatch): Promise<MarketOpportunityAnalysis>;
}
