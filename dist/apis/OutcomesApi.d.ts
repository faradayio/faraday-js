/**
 * Faraday REST API
 * The [Faraday](https://faraday.ai) API makes it easy to predict customer behavior programmatically.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@faraday.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { Outcome, OutcomeAnalysis, OutcomeMergePatch, OutcomePost } from '../models';
export interface CreateOutcomeRequest {
    outcomeFields: OutcomePost;
}
export interface DeleteOutcomeRequest {
    outcomeId: string;
}
export interface GetOutcomeRequest {
    outcomeId: string;
}
export interface GetOutcomeAnalysisRequest {
    outcomeId: string;
}
export interface GetOutcomeDownloadRequest {
    outcomeId: string;
}
export interface UpdateOutcomeRequest {
    outcomeId: string;
    outcomeFields: OutcomeMergePatch;
}
/**
 *
 */
export declare class OutcomesApi extends runtime.BaseAPI {
    /**
     * Add a new outcome (defined as a prediction of how likely individuals are to transition from one cohort to another)
     * Create outcome
     */
    private createOutcomeRaw;
    /**
     * Add a new outcome (defined as a prediction of how likely individuals are to transition from one cohort to another)
     * Create outcome
     */
    createOutcome(outcomeFields: OutcomePost): Promise<Outcome>;
    /**
     * Delete an outcome
     */
    private deleteOutcomeRaw;
    /**
     * Delete an outcome
     */
    deleteOutcome(outcomeId: string): Promise<void>;
    /**
     * Get details on a specific outcome
     * Retrieve an outcome
     */
    private getOutcomeRaw;
    /**
     * Get details on a specific outcome
     * Retrieve an outcome
     */
    getOutcome(outcomeId: string): Promise<Outcome>;
    /**
     * Get details on a specific outcome\'s analysis report on model performance, bias, etc.
     * Retrieve an outcome\'s analysis
     */
    private getOutcomeAnalysisRaw;
    /**
     * Get details on a specific outcome\'s analysis report on model performance, bias, etc.
     * Retrieve an outcome\'s analysis
     */
    getOutcomeAnalysis(outcomeId: string): Promise<OutcomeAnalysis>;
    /**
     * Download an HTML report containing information such as the objective of the model, performance, and important features
     * Retrieve outcome report
     */
    private getOutcomeDownloadRaw;
    /**
     * Download an HTML report containing information such as the objective of the model, performance, and important features
     * Retrieve outcome report
     */
    getOutcomeDownload(outcomeId: string): Promise<Blob>;
    /**
     * Get a list of outcomes defined on the account
     * List outcomes
     */
    private getOutcomesRaw;
    /**
     * Get a list of outcomes defined on the account
     * List outcomes
     */
    getOutcomes(): Promise<Array<Outcome>>;
    /**
     * Edit configuration of an existing outcome
     * Edit an outcome
     */
    private updateOutcomeRaw;
    /**
     * Edit configuration of an existing outcome
     * Edit an outcome
     */
    updateOutcome(outcomeId: string, outcomeFields: OutcomeMergePatch): Promise<Outcome>;
}
