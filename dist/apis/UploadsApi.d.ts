/**
 * Faraday REST API
 * The [Faraday](https://faraday.ai) API makes it easy to predict customer behavior programmatically.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@faraday.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { Upload } from '../models';
export interface CreateUploadRequest {
    directory: string;
    filename: string;
    body?: Blob;
}
export interface DeleteUploadRequest {
    directory: string;
    filename: string;
}
export interface GetUploadRequest {
    directory: string;
    filename: string;
}
/**
 *
 */
export declare class UploadsApi extends runtime.BaseAPI {
    /**
     * Upload a CSV file containing data to process.
     * Add a file
     */
    private createUploadRaw;
    /**
     * Upload a CSV file containing data to process.
     * Add a file
     */
    createUpload(directory: string, filename: string, body?: Blob): Promise<void>;
    /**
     * Delete a CSV file previously uploaded.
     * Delete a file
     */
    private deleteUploadRaw;
    /**
     * Delete a CSV file previously uploaded.
     * Delete a file
     */
    deleteUpload(directory: string, filename: string): Promise<void>;
    /**
     * The file uploaded via /uploads/{directory}/{filename}
     * Download a previously uploaded file
     */
    private getUploadRaw;
    /**
     * The file uploaded via /uploads/{directory}/{filename}
     * Download a previously uploaded file
     */
    getUpload(directory: string, filename: string): Promise<Blob>;
    /**
     * A list of files uploaded via /uploads/{directory}/{filename}, and their metadata
     * Retrieve the list of previously uploaded files
     */
    private getUploadsRaw;
    /**
     * A list of files uploaded via /uploads/{directory}/{filename}, and their metadata
     * Retrieve the list of previously uploaded files
     */
    getUploads(): Promise<Array<Upload>>;
}
