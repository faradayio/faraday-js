/**
 * Faraday REST API
 * The [Faraday](https://faraday.ai) API makes it easy to predict customer behavior programmatically. See our [API change policy](https://faraday.ai/legal).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@faraday.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { ArchiveConfig, Stream, StreamAnalysis } from '../models';
export interface ArchiveStreamRequest {
    streamIdOrName: string;
    archiveConfig: ArchiveConfig;
}
export interface DeleteStreamRequest {
    streamIdOrName: string;
}
export interface FindOrCreateStreamRequest {
    streamName: string;
}
export interface ForceUpdateStreamRequest {
    streamIdOrName: string;
}
export interface GetStreamRequest {
    streamIdOrName: string;
}
export interface GetStreamAnalysisRequest {
    streamIdOrName: string;
}
export interface UnarchiveStreamRequest {
    streamIdOrName: string;
    archiveConfig: ArchiveConfig;
}
/**
 *
 */
export declare class StreamsApi extends runtime.BaseAPI {
    /**
     * Archive a stream
     * Archive a stream
     */
    private archiveStreamRaw;
    /**
     * Archive a stream
     * Archive a stream
     */
    archiveStream(streamIdOrName: string, archiveConfig: ArchiveConfig): Promise<void>;
    /**
     * Delete a stream
     */
    private deleteStreamRaw;
    /**
     * Delete a stream
     */
    deleteStream(streamIdOrName: string): Promise<void>;
    /**
     * Look up (or create) an event stream by name.
     * Create a stream
     */
    private findOrCreateStreamRaw;
    /**
     * Look up (or create) an event stream by name.
     * Create a stream
     */
    findOrCreateStream(streamName: string): Promise<Stream>;
    /**
     * Trigger a rerun for this resource. Faraday automatically updates resources when their config changes, but this option is available in case of transient errors.
     * Trigger a rerun for this resource.
     */
    private forceUpdateStreamRaw;
    /**
     * Trigger a rerun for this resource. Faraday automatically updates resources when their config changes, but this option is available in case of transient errors.
     * Trigger a rerun for this resource.
     */
    forceUpdateStream(streamIdOrName: string): Promise<void>;
    /**
     * Look up a specific event stream.
     * Retrieve a stream
     */
    private getStreamRaw;
    /**
     * Look up a specific event stream.
     * Retrieve a stream
     */
    getStream(streamIdOrName: string): Promise<Stream>;
    /**
     * Get the count of stream events emitted over a time period.
     */
    private getStreamAnalysisRaw;
    /**
     * Get the count of stream events emitted over a time period.
     */
    getStreamAnalysis(streamIdOrName: string): Promise<StreamAnalysis>;
    /**
     * List all streams present on the account
     * List streams
     */
    private getStreamsRaw;
    /**
     * List all streams present on the account
     * List streams
     */
    getStreams(): Promise<Array<Stream>>;
    /**
     * Unarchive a stream
     * Unarchive a stream
     */
    private unarchiveStreamRaw;
    /**
     * Unarchive a stream
     * Unarchive a stream
     */
    unarchiveStream(streamIdOrName: string, archiveConfig: ArchiveConfig): Promise<void>;
}
