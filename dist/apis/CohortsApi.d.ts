/**
 * Faraday REST API
 * The [Faraday](https://faraday.ai) API makes it easy to predict customer behavior programmatically. See our [API change policy](https://faraday.ai/legal).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@faraday.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { ArchiveConfig, Cohort, CohortAnalysisMembership, CohortMergePatch, CohortPost } from '../models';
export interface ArchiveCohortRequest {
    cohortId: string;
    archiveConfig: ArchiveConfig;
}
export interface CreateCohortRequest {
    cohortFields: CohortPost;
}
export interface DeleteCohortRequest {
    cohortId: string;
}
export interface ForceUpdateCohortRequest {
    cohortId: string;
}
export interface GetCohortRequest {
    cohortId: string;
}
export interface GetCohortAnalysisMembershipRequest {
    cohortId: string;
}
export interface UnarchiveCohortRequest {
    cohortId: string;
    archiveConfig: ArchiveConfig;
}
export interface UpdateCohortRequest {
    cohortId: string;
    cohortFields: CohortMergePatch;
}
/**
 *
 */
export declare class CohortsApi extends runtime.BaseAPI {
    /**
     * Archive a cohort
     * Archive a cohort
     */
    private archiveCohortRaw;
    /**
     * Archive a cohort
     * Archive a cohort
     */
    archiveCohort(cohortId: string, archiveConfig: ArchiveConfig): Promise<void>;
    /**
     * Add a new cohort (defined as people who have made qualifying emissions of certain events)
     * Create cohort
     */
    private createCohortRaw;
    /**
     * Add a new cohort (defined as people who have made qualifying emissions of certain events)
     * Create cohort
     */
    createCohort(cohortFields: CohortPost): Promise<Cohort>;
    /**
     * Delete a cohort
     */
    private deleteCohortRaw;
    /**
     * Delete a cohort
     */
    deleteCohort(cohortId: string): Promise<void>;
    /**
     * Trigger a rerun for this resource. Faraday automatically updates resources when their config changes, but this option is available in case of transient errors.
     * Trigger a rerun for this resource.
     */
    private forceUpdateCohortRaw;
    /**
     * Trigger a rerun for this resource. Faraday automatically updates resources when their config changes, but this option is available in case of transient errors.
     * Trigger a rerun for this resource.
     */
    forceUpdateCohort(cohortId: string): Promise<void>;
    /**
     * Get details on a specific cohort
     * Retrieve a cohort
     */
    private getCohortRaw;
    /**
     * Get details on a specific cohort
     * Retrieve a cohort
     */
    getCohort(cohortId: string): Promise<Cohort>;
    /**
     * Get the cohort membership counts over time.
     */
    private getCohortAnalysisMembershipRaw;
    /**
     * Get the cohort membership counts over time.
     */
    getCohortAnalysisMembership(cohortId: string): Promise<CohortAnalysisMembership>;
    /**
     * Get a list of cohorts defined on the account
     * List cohorts
     */
    private getCohortsRaw;
    /**
     * Get a list of cohorts defined on the account
     * List cohorts
     */
    getCohorts(): Promise<Array<Cohort>>;
    /**
     * Unarchive a cohort
     * Unarchive a cohort
     */
    private unarchiveCohortRaw;
    /**
     * Unarchive a cohort
     * Unarchive a cohort
     */
    unarchiveCohort(cohortId: string, archiveConfig: ArchiveConfig): Promise<void>;
    /**
     * Edit configuration of a cohort
     * Edit a cohort
     */
    private updateCohortRaw;
    /**
     * Edit configuration of a cohort
     * Edit a cohort
     */
    updateCohort(cohortId: string, cohortFields: CohortMergePatch): Promise<Cohort>;
}
