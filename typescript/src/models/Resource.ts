/* tslint:disable */
/* eslint-disable */
/**
 * Faraday REST API
 * The [Faraday](https://faraday.ai) SDK makes it easy to predict customer behavior using a simple API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ResourceStatus,
    ResourceStatusFromJSON,
    ResourceStatusFromJSONTyped,
    ResourceStatusToJSON,
} from './ResourceStatus';

/**
 * Fields shared between all resource types.
 * @export
 * @interface Resource
 */
export interface Resource {
    /**
     * When this resource was created.
     * @type {Date}
     * @memberof Resource
     */
    createdAt: Date;
    /**
     * A unique ID for this resource.
     * @type {string}
     * @memberof Resource
     */
    id: string;
    /**
     * The type of this resource.
     * @type {string}
     * @memberof Resource
     */
    resourceType: string;
    /**
     * 
     * @type {ResourceStatus}
     * @memberof Resource
     */
    status: ResourceStatus;
    /**
     * When the status of this resource was last updated.
     * @type {Date}
     * @memberof Resource
     */
    statusChangedAt?: Date;
    /**
     * If this resource has `status == "error"`, this will contain an error message.
     * @type {string}
     * @memberof Resource
     */
    statusError?: string;
    /**
     * When this resource was last updated.
     * @type {Date}
     * @memberof Resource
     */
    updatedAt: Date;
}

export function ResourceFromJSON(json: any): Resource {
    return ResourceFromJSONTyped(json, false);
}

export function ResourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Resource {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'createdAt': (new Date(json['created_at'])),
        'id': json['id'],
        'resourceType': json['resource_type'],
        'status': ResourceStatusFromJSON(json['status']),
        'statusChangedAt': !exists(json, 'status_changed_at') ? undefined : (new Date(json['status_changed_at'])),
        'statusError': !exists(json, 'status_error') ? undefined : json['status_error'],
        'updatedAt': (new Date(json['updated_at'])),
    };
}

export function ResourceToJSON(value?: Resource | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'created_at': (value.createdAt.toISOString()),
        'id': value.id,
        'resource_type': value.resourceType,
        'status': ResourceStatusToJSON(value.status),
        'status_changed_at': value.statusChangedAt === undefined ? undefined : (value.statusChangedAt.toISOString()),
        'status_error': value.statusError,
        'updated_at': (value.updatedAt.toISOString()),
    };
}

