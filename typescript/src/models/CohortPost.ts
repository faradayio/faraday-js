/* tslint:disable */
/* eslint-disable */
/**
 * Faraday REST API
 * The [Faraday](https://faraday.ai) SDK makes it easy to predict customer behavior using a simple API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CohortPost
 */
export interface CohortPost {
    /**
     * Max count for this cohort's config
     * @type {number}
     * @memberof CohortPost
     */
    maxCount?: number;
    /**
     * Max value for this cohort's config
     * @type {number}
     * @memberof CohortPost
     */
    maxValue?: number;
    /**
     * Min count for this cohort's config
     * @type {number}
     * @memberof CohortPost
     */
    minCount?: number;
    /**
     * Min value for this cohort's config
     * @type {number}
     * @memberof CohortPost
     */
    minValue?: number;
    /**
     * Human-readable label for this cohort.
     * @type {string}
     * @memberof CohortPost
     */
    name?: string;
    /**
     * The `name` field of the stream from which to build this cohort.
     * @type {string}
     * @memberof CohortPost
     */
    streamName: string;
}

export function CohortPostFromJSON(json: any): CohortPost {
    return CohortPostFromJSONTyped(json, false);
}

export function CohortPostFromJSONTyped(json: any, ignoreDiscriminator: boolean): CohortPost {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'maxCount': !exists(json, 'max_count') ? undefined : json['max_count'],
        'maxValue': !exists(json, 'max_value') ? undefined : json['max_value'],
        'minCount': !exists(json, 'min_count') ? undefined : json['min_count'],
        'minValue': !exists(json, 'min_value') ? undefined : json['min_value'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'streamName': json['stream_name'],
    };
}

export function CohortPostToJSON(value?: CohortPost | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'max_count': value.maxCount,
        'max_value': value.maxValue,
        'min_count': value.minCount,
        'min_value': value.minValue,
        'name': value.name,
        'stream_name': value.streamName,
    };
}

