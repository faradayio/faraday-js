/* tslint:disable */
/* eslint-disable */
/**
 * Faraday REST API
 * The [Faraday](https://faraday.ai) API makes it easy to predict customer behavior programmatically.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@faraday.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * (Parameters used to POST a new value of the `ConnectionOptionsSnowflake` type.)
 * 
 * Snowflake connection options
 * @export
 * @interface ConnectionOptionsSnowflakePost
 */
export interface ConnectionOptionsSnowflakePost {
    /**
     * Snowflake account name. If provided, also provide organization name. Preferred over legacy account locator. https://docs.snowflake.com/en/user-guide/admin-account-identifier.html#format-1-preferred-account-name-in-your-organization.
     * @type {string}
     * @memberof ConnectionOptionsSnowflakePost
     */
    account_name?: string;
    /**
     * Database
     * @type {string}
     * @memberof ConnectionOptionsSnowflakePost
     */
    database: string;
    /**
     * Not needed if organization name is provided. If your Snowflake account existed before the Organizations feature was enabled, the Format 2 (Legacy): Account Locator in a Region is used as the account name.
     * @type {string}
     * @memberof ConnectionOptionsSnowflakePost
     */
    legacy_account_locator?: string;
    /**
     * Snowflake organization name. If provided, also provide account name. Preferred over legacy account locator. https://docs.snowflake.com/en/user-guide/admin-account-identifier.html#format-1-preferred-account-name-in-your-organization.
     * @type {string}
     * @memberof ConnectionOptionsSnowflakePost
     */
    organization_name?: string;
    /**
     * The Snowflake role that will be used by Faraday to connect to the instance (Usually this is FARADAY)
     * @type {string}
     * @memberof ConnectionOptionsSnowflakePost
     */
    role: string;
    /**
     * Schema
     * @type {string}
     * @memberof ConnectionOptionsSnowflakePost
     */
    schema: string;
    /**
     * The type of connection
     * @type {string}
     * @memberof ConnectionOptionsSnowflakePost
     */
    type: string;
    /**
     * Snowflake user.
     * @type {string}
     * @memberof ConnectionOptionsSnowflakePost
     */
    user: string;
    /**
     * Warehouse
     * @type {string}
     * @memberof ConnectionOptionsSnowflakePost
     */
    warehouse: string;
}

export function ConnectionOptionsSnowflakePostFromJSON(json: any): ConnectionOptionsSnowflakePost {
    return ConnectionOptionsSnowflakePostFromJSONTyped(json, false);
}

export function ConnectionOptionsSnowflakePostFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConnectionOptionsSnowflakePost {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'account_name': !exists(json, 'account_name') ? undefined : json['account_name'],
        'database': json['database'],
        'legacy_account_locator': !exists(json, 'legacy_account_locator') ? undefined : json['legacy_account_locator'],
        'organization_name': !exists(json, 'organization_name') ? undefined : json['organization_name'],
        'role': json['role'],
        'schema': json['schema'],
        'type': json['type'],
        'user': json['user'],
        'warehouse': json['warehouse'],
    };
}

export function ConnectionOptionsSnowflakePostToJSON(value?: ConnectionOptionsSnowflakePost | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'account_name': value.account_name,
        'database': value.database,
        'legacy_account_locator': value.legacy_account_locator,
        'organization_name': value.organization_name,
        'role': value.role,
        'schema': value.schema,
        'type': value.type,
        'user': value.user,
        'warehouse': value.warehouse,
    };
}

