/* tslint:disable */
/* eslint-disable */
/**
 * Faraday REST API
 * The [Faraday](https://faraday.ai) SDK makes it easy to predict customer behavior using a simple API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * (Parameters used to POST a new value of the `ConnectionOptionsSnowflake` type.)
 * 
 * Snowflake connection options
 * 
 * Prerequisites:
 * * A Faraday-specific keypair must be generated in Snowflake
 * * A Snowflake user must be configured with necessary permissions using the generated keypair
 * @export
 * @interface ConnectionOptionsSnowflakePost
 */
export interface ConnectionOptionsSnowflakePost {
    /**
     * The Snowflake role that will be used by Faraday to connect to the instance (Usually this is FARADAY)
     * @type {string}
     * @memberof ConnectionOptionsSnowflakePost
     */
    role: string;
    /**
     * The type of connection
     * @type {string}
     * @memberof ConnectionOptionsSnowflakePost
     */
    type: string;
    /**
     * Every Snowflake instance has a unique URL that contains the account identifier. For eg: https://test1234.us-east-2.aws.snowflakecomputing.com
     * @type {string}
     * @memberof ConnectionOptionsSnowflakePost
     */
    url: string;
    /**
     * The Snowflake account user that will be used by Faraday to connect to the instance (Usually this is FARADAY)
     * @type {string}
     * @memberof ConnectionOptionsSnowflakePost
     */
    user: string;
    /**
     * Snowflake warehouse
     * @type {string}
     * @memberof ConnectionOptionsSnowflakePost
     */
    warehouse: string;
}

export function ConnectionOptionsSnowflakePostFromJSON(json: any): ConnectionOptionsSnowflakePost {
    return ConnectionOptionsSnowflakePostFromJSONTyped(json, false);
}

export function ConnectionOptionsSnowflakePostFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConnectionOptionsSnowflakePost {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'role': json['role'],
        'type': json['type'],
        'url': json['url'],
        'user': json['user'],
        'warehouse': json['warehouse'],
    };
}

export function ConnectionOptionsSnowflakePostToJSON(value?: ConnectionOptionsSnowflakePost | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'role': value.role,
        'type': value.type,
        'url': value.url,
        'user': value.user,
        'warehouse': value.warehouse,
    };
}

