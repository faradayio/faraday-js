/* tslint:disable */
/* eslint-disable */
/**
 * Faraday REST API
 * The [Faraday](https://faraday.ai) SDK makes it easy to predict customer behavior using a simple API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * (Parameters used to PUT a value of the `ConnectionOptionsRedshift` type.)
 * 
 * AWS Redshift connection options
 * 
 * Prerequisites:
 * * A database system user must be configured with necessary permissions
 * @export
 * @interface ConnectionOptionsRedshiftPut
 */
export interface ConnectionOptionsRedshiftPut {
    /**
     * Redshift tables exists inside of an AWS region, e.g. us-east-1
     * @type {string}
     * @memberof ConnectionOptionsRedshiftPut
     */
    aws_region: string;
    /**
     * Sometimes Redshift is deployed on a private IP behind an AWS Load Balancer. In this case, specify the DNS name here and Faraday will check for an SSL certificate matching the name of the underlying Redshift cluster.
     * @type {string}
     * @memberof ConnectionOptionsRedshiftPut
     */
    load_balancer?: string;
    /**
     * Redshift tables exist inside of schemas, e.g. ANALYTICS or PUBLIC.
     * @type {string}
     * @memberof ConnectionOptionsRedshiftPut
     */
    schema: string;
    /**
     * The type of connection
     * @type {string}
     * @memberof ConnectionOptionsRedshiftPut
     */
    type: string;
    /**
     * This URL (starting with redshift://) should reference the cluster's own (possibly private) DNS name. If you use a load balancer in front of it, specify that in other options.
     * @type {string}
     * @memberof ConnectionOptionsRedshiftPut
     */
    url: string;
}

export function ConnectionOptionsRedshiftPutFromJSON(json: any): ConnectionOptionsRedshiftPut {
    return ConnectionOptionsRedshiftPutFromJSONTyped(json, false);
}

export function ConnectionOptionsRedshiftPutFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConnectionOptionsRedshiftPut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'aws_region': json['aws_region'],
        'load_balancer': !exists(json, 'load_balancer') ? undefined : json['load_balancer'],
        'schema': json['schema'],
        'type': json['type'],
        'url': json['url'],
    };
}

export function ConnectionOptionsRedshiftPutToJSON(value?: ConnectionOptionsRedshiftPut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'aws_region': value.aws_region,
        'load_balancer': value.load_balancer,
        'schema': value.schema,
        'type': value.type,
        'url': value.url,
    };
}

