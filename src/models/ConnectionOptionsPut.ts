/* tslint:disable */
/* eslint-disable */
/**
 * Faraday REST API
 * The [Faraday](https://faraday.ai) SDK makes it easy to predict customer behavior using a simple API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    ConnectionOptionsAzureSqlServerPut,
    ConnectionOptionsAzureSqlServerPutFromJSON,
    ConnectionOptionsAzureSqlServerPutFromJSONTyped,
    ConnectionOptionsAzureSqlServerPutToJSON,
} from './ConnectionOptionsAzureSqlServerPut';
import {
    ConnectionOptionsBigQueryPut,
    ConnectionOptionsBigQueryPutFromJSON,
    ConnectionOptionsBigQueryPutFromJSONTyped,
    ConnectionOptionsBigQueryPutToJSON,
} from './ConnectionOptionsBigQueryPut';
import {
    ConnectionOptionsClassicPut,
    ConnectionOptionsClassicPutFromJSON,
    ConnectionOptionsClassicPutFromJSONTyped,
    ConnectionOptionsClassicPutToJSON,
} from './ConnectionOptionsClassicPut';
import {
    ConnectionOptionsRedshiftPut,
    ConnectionOptionsRedshiftPutFromJSON,
    ConnectionOptionsRedshiftPutFromJSONTyped,
    ConnectionOptionsRedshiftPutToJSON,
} from './ConnectionOptionsRedshiftPut';
import {
    ConnectionOptionsS3CsvPut,
    ConnectionOptionsS3CsvPutFromJSON,
    ConnectionOptionsS3CsvPutFromJSONTyped,
    ConnectionOptionsS3CsvPutToJSON,
} from './ConnectionOptionsS3CsvPut';
import {
    ConnectionOptionsSnowflakePut,
    ConnectionOptionsSnowflakePutFromJSON,
    ConnectionOptionsSnowflakePutFromJSONTyped,
    ConnectionOptionsSnowflakePutToJSON,
} from './ConnectionOptionsSnowflakePut';

/**
 * @type ConnectionOptionsPut
 * The connection-specific options. These vary by connection type.
 * @export
 */
export type ConnectionOptionsPut = { type: 'azure_sql_server' } & ConnectionOptionsAzureSqlServerPut | { type: 'bigquery' } & ConnectionOptionsBigQueryPut | { type: 'classic' } & ConnectionOptionsClassicPut | { type: 'redshift' } & ConnectionOptionsRedshiftPut | { type: 's3_csv' } & ConnectionOptionsS3CsvPut | { type: 'snowflake' } & ConnectionOptionsSnowflakePut;

export function ConnectionOptionsPutFromJSON(json: any): ConnectionOptionsPut {
    return ConnectionOptionsPutFromJSONTyped(json, false);
}

export function ConnectionOptionsPutFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConnectionOptionsPut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['type']) {
        case 'azure_sql_server':
            return {...ConnectionOptionsAzureSqlServerPutFromJSONTyped(json, true), type: 'azure_sql_server'};
        case 'bigquery':
            return {...ConnectionOptionsBigQueryPutFromJSONTyped(json, true), type: 'bigquery'};
        case 'classic':
            return {...ConnectionOptionsClassicPutFromJSONTyped(json, true), type: 'classic'};
        case 'redshift':
            return {...ConnectionOptionsRedshiftPutFromJSONTyped(json, true), type: 'redshift'};
        case 's3_csv':
            return {...ConnectionOptionsS3CsvPutFromJSONTyped(json, true), type: 's3_csv'};
        case 'snowflake':
            return {...ConnectionOptionsSnowflakePutFromJSONTyped(json, true), type: 'snowflake'};
        default:
            throw new Error(`No variant of ConnectionOptionsPut exists with 'type=${json['type']}'`);
    }
}

export function ConnectionOptionsPutToJSON(value?: ConnectionOptionsPut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['type']) {
        case 'azure_sql_server':
            return ConnectionOptionsAzureSqlServerPutToJSON(value);
        case 'bigquery':
            return ConnectionOptionsBigQueryPutToJSON(value);
        case 'classic':
            return ConnectionOptionsClassicPutToJSON(value);
        case 'redshift':
            return ConnectionOptionsRedshiftPutToJSON(value);
        case 's3_csv':
            return ConnectionOptionsS3CsvPutToJSON(value);
        case 'snowflake':
            return ConnectionOptionsSnowflakePutToJSON(value);
        default:
            throw new Error(`No variant of ConnectionOptionsPut exists with 'type=${value['type']}'`);
    }
}

