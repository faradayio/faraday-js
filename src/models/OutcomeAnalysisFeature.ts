/* tslint:disable */
/* eslint-disable */
/**
 * Faraday REST API
 * The [Faraday](https://faraday.ai) API makes it easy to predict customer behavior programmatically.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@faraday.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    OutcomeAnalysisFeatureDirectionality,
    OutcomeAnalysisFeatureDirectionalityFromJSON,
    OutcomeAnalysisFeatureDirectionalityFromJSONTyped,
    OutcomeAnalysisFeatureDirectionalityToJSON,
} from './OutcomeAnalysisFeatureDirectionality';

/**
 * Importance and directionality of a given feature in an outcome.
 * @export
 * @interface OutcomeAnalysisFeature
 */
export interface OutcomeAnalysisFeature {
    /**
     * 
     * @type {Array<OutcomeAnalysisFeatureDirectionality>}
     * @memberof OutcomeAnalysisFeature
     */
    directionality: Array<OutcomeAnalysisFeatureDirectionality>;
    /**
     * The importance of the feature
     * @type {number}
     * @memberof OutcomeAnalysisFeature
     */
    importance: number;
    /**
     * The human-readable name of the feature
     * @type {string}
     * @memberof OutcomeAnalysisFeature
     */
    literate: string;
    /**
     * The identifier for the feature
     * @type {string}
     * @memberof OutcomeAnalysisFeature
     */
    name: string;
}

export function OutcomeAnalysisFeatureFromJSON(json: any): OutcomeAnalysisFeature {
    return OutcomeAnalysisFeatureFromJSONTyped(json, false);
}

export function OutcomeAnalysisFeatureFromJSONTyped(json: any, ignoreDiscriminator: boolean): OutcomeAnalysisFeature {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'directionality': ((json['directionality'] as Array<any>).map(OutcomeAnalysisFeatureDirectionalityFromJSON)),
        'importance': json['importance'],
        'literate': json['literate'],
        'name': json['name'],
    };
}

export function OutcomeAnalysisFeatureToJSON(value?: OutcomeAnalysisFeature | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'directionality': ((value.directionality as Array<any>).map(OutcomeAnalysisFeatureDirectionalityToJSON)),
        'importance': value.importance,
        'literate': value.literate,
        'name': value.name,
    };
}

