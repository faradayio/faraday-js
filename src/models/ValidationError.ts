/* tslint:disable */
/* eslint-disable */
/**
 * Faraday REST API
 * The [Faraday](https://faraday.ai) API makes it easy to predict customer behavior programmatically.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@faraday.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ValidationErrorContext,
    ValidationErrorContextFromJSON,
    ValidationErrorContextFromJSONTyped,
    ValidationErrorContextToJSON,
} from './ValidationErrorContext';

/**
 * A JSON Schema validation error.
 * @export
 * @interface ValidationError
 */
export interface ValidationError {
    /**
     * 
     * @type {ValidationErrorContext}
     * @memberof ValidationError
     */
    context: ValidationErrorContext;
    /**
     * A human-readable error message.
     * @type {string}
     * @memberof ValidationError
     */
    message: string;
    /**
     * The location in the document that failed validation.
     * @type {string}
     * @memberof ValidationError
     */
    path: string;
    /**
     * A suggestion for fixing this error.
     * @type {string}
     * @memberof ValidationError
     */
    suggestion?: string;
}

export function ValidationErrorFromJSON(json: any): ValidationError {
    return ValidationErrorFromJSONTyped(json, false);
}

export function ValidationErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): ValidationError {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'context': ValidationErrorContextFromJSON(json['context']),
        'message': json['message'],
        'path': json['path'],
        'suggestion': !exists(json, 'suggestion') ? undefined : json['suggestion'],
    };
}

export function ValidationErrorToJSON(value?: ValidationError | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'context': ValidationErrorContextToJSON(value.context),
        'message': value.message,
        'path': value.path,
        'suggestion': value.suggestion,
    };
}

