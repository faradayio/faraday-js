/* tslint:disable */
/* eslint-disable */
/**
 * Faraday REST API
 * The [Faraday](https://faraday.ai) SDK makes it easy to predict customer behavior using a simple API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    DatasetOptionsBigQuery,
    DatasetOptionsBigQueryFromJSON,
    DatasetOptionsBigQueryFromJSONTyped,
    DatasetOptionsBigQueryToJSON,
} from './DatasetOptionsBigQuery';
import {
    DatasetOptionsClassic,
    DatasetOptionsClassicFromJSON,
    DatasetOptionsClassicFromJSONTyped,
    DatasetOptionsClassicToJSON,
} from './DatasetOptionsClassic';
import {
    DatasetOptionsHostedCsv,
    DatasetOptionsHostedCsvFromJSON,
    DatasetOptionsHostedCsvFromJSONTyped,
    DatasetOptionsHostedCsvToJSON,
} from './DatasetOptionsHostedCsv';

/**
 * @type DatasetOptions
 * Dataset connection options
 * @export
 */
export type DatasetOptions = { type: 'bigquery' } & DatasetOptionsBigQuery | { type: 'classic' } & DatasetOptionsClassic | { type: 'hosted_csv' } & DatasetOptionsHostedCsv;

export function DatasetOptionsFromJSON(json: any): DatasetOptions {
    return DatasetOptionsFromJSONTyped(json, false);
}

export function DatasetOptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): DatasetOptions {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['type']) {
        case 'bigquery':
            return {...DatasetOptionsBigQueryFromJSONTyped(json, true), type: 'bigquery'};
        case 'classic':
            return {...DatasetOptionsClassicFromJSONTyped(json, true), type: 'classic'};
        case 'hosted_csv':
            return {...DatasetOptionsHostedCsvFromJSONTyped(json, true), type: 'hosted_csv'};
        default:
            throw new Error(`No variant of DatasetOptions exists with 'type=${json['type']}'`);
    }
}

export function DatasetOptionsToJSON(value?: DatasetOptions | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['type']) {
        case 'bigquery':
            return DatasetOptionsBigQueryToJSON(value);
        case 'classic':
            return DatasetOptionsClassicToJSON(value);
        case 'hosted_csv':
            return DatasetOptionsHostedCsvToJSON(value);
        default:
            throw new Error(`No variant of DatasetOptions exists with 'type=${value['type']}'`);
    }
}

