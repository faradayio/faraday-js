/* tslint:disable */
/* eslint-disable */
/**
 * Faraday REST API
 * The [Faraday](https://faraday.ai) API makes it easy to predict customer behavior programmatically.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@faraday.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * SFTP target options
 * @export
 * @interface TargetOptionsSftp
 */
export interface TargetOptionsSftp {
    /**
     * CSV delimiter
     * @type {string}
     * @memberof TargetOptionsSftp
     */
    delimiter?: string;
    /**
     * What the file will be called after deploying to SFTP (e.g. output/file.csv). If you enable gzip, best practice is to add .gz to the end. Note: strftime substitutions like `%Y-%m-%d` are supported (e.g. output/repeat_customers_%Y-%m-%d.csv).
     * @type {string}
     * @memberof TargetOptionsSftp
     */
    file_name: string;
    /**
     * Whether files are gzipped.
     * @type {boolean}
     * @memberof TargetOptionsSftp
     */
    gzip?: boolean;
    /**
     * Whether to always quote all fields, even if they don't require it. Some systems require this.
     * @type {boolean}
     * @memberof TargetOptionsSftp
     */
    quote_all?: boolean;
    /**
     * The type of connection
     * @type {string}
     * @memberof TargetOptionsSftp
     */
    type: string;
}

export function TargetOptionsSftpFromJSON(json: any): TargetOptionsSftp {
    return TargetOptionsSftpFromJSONTyped(json, false);
}

export function TargetOptionsSftpFromJSONTyped(json: any, ignoreDiscriminator: boolean): TargetOptionsSftp {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'delimiter': !exists(json, 'delimiter') ? undefined : json['delimiter'],
        'file_name': json['file_name'],
        'gzip': !exists(json, 'gzip') ? undefined : json['gzip'],
        'quote_all': !exists(json, 'quote_all') ? undefined : json['quote_all'],
        'type': json['type'],
    };
}

export function TargetOptionsSftpToJSON(value?: TargetOptionsSftp | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'delimiter': value.delimiter,
        'file_name': value.file_name,
        'gzip': value.gzip,
        'quote_all': value.quote_all,
        'type': value.type,
    };
}

