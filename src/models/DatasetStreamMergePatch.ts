/* tslint:disable */
/* eslint-disable */
/**
 * Faraday REST API
 * The [Faraday](https://faraday.ai) API makes it easy to predict customer behavior programmatically.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@faraday.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    DataMapMergePatch,
    DataMapMergePatchFromJSON,
    DataMapMergePatchFromJSONTyped,
    DataMapMergePatchToJSON,
} from './DataMapMergePatch';
import {
    DatasetStreamCondition,
    DatasetStreamConditionFromJSON,
    DatasetStreamConditionFromJSONTyped,
    DatasetStreamConditionToJSON,
} from './DatasetStreamCondition';

/**
 * 
 * @export
 * @interface DatasetStreamMergePatch
 */
export interface DatasetStreamMergePatch {
    /**
     * List of conditions to use to filter events.
     * @type {Array<DatasetStreamCondition>}
     * @memberof DatasetStreamMergePatch
     */
    conditions?: Array<DatasetStreamCondition> | null;
    /**
     * 
     * @type {DataMapMergePatch}
     * @memberof DatasetStreamMergePatch
     */
    data_map?: DataMapMergePatch;
}

export function DatasetStreamMergePatchFromJSON(json: any): DatasetStreamMergePatch {
    return DatasetStreamMergePatchFromJSONTyped(json, false);
}

export function DatasetStreamMergePatchFromJSONTyped(json: any, ignoreDiscriminator: boolean): DatasetStreamMergePatch {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'conditions': !exists(json, 'conditions') ? undefined : (json['conditions'] === null ? null : (json['conditions'] as Array<any>).map(DatasetStreamConditionFromJSON)),
        'data_map': !exists(json, 'data_map') ? undefined : DataMapMergePatchFromJSON(json['data_map']),
    };
}

export function DatasetStreamMergePatchToJSON(value?: DatasetStreamMergePatch | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'conditions': value.conditions === undefined ? undefined : (value.conditions === null ? null : (value.conditions as Array<any>).map(DatasetStreamConditionToJSON)),
        'data_map': DataMapMergePatchToJSON(value.data_map),
    };
}

