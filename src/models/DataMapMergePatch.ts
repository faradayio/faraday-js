/* tslint:disable */
/* eslint-disable */
/**
 * Faraday REST API
 * The [Faraday](https://faraday.ai) SDK makes it easy to predict customer behavior using a simple API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    DataMapColumnMergePatch,
    DataMapColumnMergePatchFromJSON,
    DataMapColumnMergePatchFromJSONTyped,
    DataMapColumnMergePatchToJSON,
} from './DataMapColumnMergePatch';

/**
 * (Parameters used to PATCH the `DataMap` type.)
 * 
 * A mapping from dataset columns to what they mean. Some fields have special meanings.
 * @export
 * @interface DataMapMergePatch
 */
export interface DataMapMergePatch {
    [key: string]: DataMapColumnMergePatch | any;
    /**
     * 
     * @type {DataMapColumnMergePatch}
     * @memberof DataMapMergePatch
     */
    channel?: DataMapColumnMergePatch | null;
    /**
     * 
     * @type {DataMapColumnMergePatch}
     * @memberof DataMapMergePatch
     */
    datetime?: DataMapColumnMergePatch | null;
    /**
     * 
     * @type {DataMapColumnMergePatch}
     * @memberof DataMapMergePatch
     */
    product?: DataMapColumnMergePatch | null;
    /**
     * 
     * @type {DataMapColumnMergePatch}
     * @memberof DataMapMergePatch
     */
    value?: DataMapColumnMergePatch | null;
}

export function DataMapMergePatchFromJSON(json: any): DataMapMergePatch {
    return DataMapMergePatchFromJSONTyped(json, false);
}

export function DataMapMergePatchFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataMapMergePatch {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
            ...json,
        'channel': !exists(json, 'channel') ? undefined : DataMapColumnMergePatchFromJSON(json['channel']),
        'datetime': !exists(json, 'datetime') ? undefined : DataMapColumnMergePatchFromJSON(json['datetime']),
        'product': !exists(json, 'product') ? undefined : DataMapColumnMergePatchFromJSON(json['product']),
        'value': !exists(json, 'value') ? undefined : DataMapColumnMergePatchFromJSON(json['value']),
    };
}

export function DataMapMergePatchToJSON(value?: DataMapMergePatch | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
            ...value,
        'channel': DataMapColumnMergePatchToJSON(value.channel),
        'datetime': DataMapColumnMergePatchToJSON(value.datetime),
        'product': DataMapColumnMergePatchToJSON(value.product),
        'value': DataMapColumnMergePatchToJSON(value.value),
    };
}

