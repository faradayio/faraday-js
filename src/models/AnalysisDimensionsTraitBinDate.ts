/* tslint:disable */
/* eslint-disable */
/**
 * Faraday REST API
 * The [Faraday](https://faraday.ai) API makes it easy to predict customer behavior programmatically.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@faraday.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AnalysisDimensionsTraitBinDate
 */
export interface AnalysisDimensionsTraitBinDate {
    /**
     * The numeric total of individuals found within this bin range.
     * @type {number}
     * @memberof AnalysisDimensionsTraitBinDate
     */
    count: number;
    /**
     * Oridinal dimensions are represented as a list of bins, where each bin is a range from X to Y and a resulting count of individuals that match within that range.
     * @type {string}
     * @memberof AnalysisDimensionsTraitBinDate
     */
    data_type: string;
    /**
     * The upper range of the bin for this dimension. Max can be null, meaning it is all values above the min range for this bin.
     * @type {string}
     * @memberof AnalysisDimensionsTraitBinDate
     */
    max?: string;
    /**
     * The starting numeric value this bin is counted by.
     * @type {string}
     * @memberof AnalysisDimensionsTraitBinDate
     */
    min: string;
    /**
     * The count represented as a percentage based on the sum of counts.
     * @type {number}
     * @memberof AnalysisDimensionsTraitBinDate
     */
    percent: number;
}

export function AnalysisDimensionsTraitBinDateFromJSON(json: any): AnalysisDimensionsTraitBinDate {
    return AnalysisDimensionsTraitBinDateFromJSONTyped(json, false);
}

export function AnalysisDimensionsTraitBinDateFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnalysisDimensionsTraitBinDate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'count': json['count'],
        'data_type': json['data_type'],
        'max': !exists(json, 'max') ? undefined : json['max'],
        'min': json['min'],
        'percent': json['percent'],
    };
}

export function AnalysisDimensionsTraitBinDateToJSON(value?: AnalysisDimensionsTraitBinDate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'count': value.count,
        'data_type': value.data_type,
        'max': value.max,
        'min': value.min,
        'percent': value.percent,
    };
}

