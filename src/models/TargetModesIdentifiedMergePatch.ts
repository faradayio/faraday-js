/* tslint:disable */
/* eslint-disable */
/**
 * Faraday REST API
 * The [Faraday](https://faraday.ai) API makes it easy to predict customer behavior programmatically.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@faraday.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TargetAggregateIdentified,
    TargetAggregateIdentifiedFromJSON,
    TargetAggregateIdentifiedFromJSONTyped,
    TargetAggregateIdentifiedToJSON,
} from './TargetAggregateIdentified';
import {
    TargetTransformPresetIdentified,
    TargetTransformPresetIdentifiedFromJSON,
    TargetTransformPresetIdentifiedFromJSONTyped,
    TargetTransformPresetIdentifiedToJSON,
} from './TargetTransformPresetIdentified';

/**
 * (Parameters used to PATCH the `TargetModesIdentified` type.)
 * 
 * Suitable for direct mail and canvassing.
 * @export
 * @interface TargetModesIdentifiedMergePatch
 */
export interface TargetModesIdentifiedMergePatch {
    /**
     * 
     * @type {TargetAggregateIdentified}
     * @memberof TargetModesIdentifiedMergePatch
     */
    aggregate?: TargetAggregateIdentified;
    /**
     * The replication mode
     * @type {string}
     * @memberof TargetModesIdentifiedMergePatch
     */
    mode: string;
    /**
     * 
     * @type {TargetTransformPresetIdentified}
     * @memberof TargetModesIdentifiedMergePatch
     */
    transform_preset?: TargetTransformPresetIdentified | null;
}

export function TargetModesIdentifiedMergePatchFromJSON(json: any): TargetModesIdentifiedMergePatch {
    return TargetModesIdentifiedMergePatchFromJSONTyped(json, false);
}

export function TargetModesIdentifiedMergePatchFromJSONTyped(json: any, ignoreDiscriminator: boolean): TargetModesIdentifiedMergePatch {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'aggregate': !exists(json, 'aggregate') ? undefined : TargetAggregateIdentifiedFromJSON(json['aggregate']),
        'mode': json['mode'],
        'transform_preset': !exists(json, 'transform_preset') ? undefined : TargetTransformPresetIdentifiedFromJSON(json['transform_preset']),
    };
}

export function TargetModesIdentifiedMergePatchToJSON(value?: TargetModesIdentifiedMergePatch | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'aggregate': TargetAggregateIdentifiedToJSON(value.aggregate),
        'mode': value.mode,
        'transform_preset': TargetTransformPresetIdentifiedToJSON(value.transform_preset),
    };
}

