/* tslint:disable */
/* eslint-disable */
/**
 * Faraday REST API
 * The [Faraday](https://faraday.ai) API makes it easy to predict customer behavior programmatically.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@faraday.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ScopePayloadPost,
    ScopePayloadPostFromJSON,
    ScopePayloadPostFromJSONTyped,
    ScopePayloadPostToJSON,
} from './ScopePayloadPost';
import {
    ScopePopulationPost,
    ScopePopulationPostFromJSON,
    ScopePopulationPostFromJSONTyped,
    ScopePopulationPostToJSON,
} from './ScopePopulationPost';

/**
 * (Parameters used to POST a new value of the `Scope` type.)
 * 
 * Instructions on how to produce output data.
 * @export
 * @interface ScopePost
 */
export interface ScopePost {
    /**
     * Human-readable label for this scope. Each scope must have a unique name.
     * @type {string}
     * @memberof ScopePost
     */
    name: string;
    /**
     * 
     * @type {ScopePayloadPost}
     * @memberof ScopePost
     */
    payload: ScopePayloadPost;
    /**
     * 
     * @type {ScopePopulationPost}
     * @memberof ScopePost
     */
    population: ScopePopulationPost;
    /**
     * A preview scope provides only a limited number of output records, but
     * it is not billed.
     * @type {boolean}
     * @memberof ScopePost
     */
    preview: boolean;
}

export function ScopePostFromJSON(json: any): ScopePost {
    return ScopePostFromJSONTyped(json, false);
}

export function ScopePostFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScopePost {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'payload': ScopePayloadPostFromJSON(json['payload']),
        'population': ScopePopulationPostFromJSON(json['population']),
        'preview': json['preview'],
    };
}

export function ScopePostToJSON(value?: ScopePost | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'payload': ScopePayloadPostToJSON(value.payload),
        'population': ScopePopulationPostToJSON(value.population),
        'preview': value.preview,
    };
}

