/* tslint:disable */
/* eslint-disable */
/**
 * Faraday REST API
 * The [Faraday](https://faraday.ai) API makes it easy to predict customer behavior programmatically.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@faraday.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ScopePayloadPut,
    ScopePayloadPutFromJSON,
    ScopePayloadPutFromJSONTyped,
    ScopePayloadPutToJSON,
} from './ScopePayloadPut';
import {
    ScopePopulationPut,
    ScopePopulationPutFromJSON,
    ScopePopulationPutFromJSONTyped,
    ScopePopulationPutToJSON,
} from './ScopePopulationPut';

/**
 * (Parameters used to PUT a value of the `Scope` type.)
 * 
 * Instructions on how to produce output data.
 * @export
 * @interface ScopePut
 */
export interface ScopePut {
    /**
     * Human-readable label for this scope. Each scope must have a unique name.
     * @type {string}
     * @memberof ScopePut
     */
    name: string;
    /**
     * 
     * @type {ScopePayloadPut}
     * @memberof ScopePut
     */
    payload: ScopePayloadPut;
    /**
     * 
     * @type {ScopePopulationPut}
     * @memberof ScopePut
     */
    population: ScopePopulationPut;
    /**
     * A preview scope provides only a limited number of output records, but
     * it is not billed.
     * @type {boolean}
     * @memberof ScopePut
     */
    preview: boolean;
}

export function ScopePutFromJSON(json: any): ScopePut {
    return ScopePutFromJSONTyped(json, false);
}

export function ScopePutFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScopePut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'payload': ScopePayloadPutFromJSON(json['payload']),
        'population': ScopePopulationPutFromJSON(json['population']),
        'preview': json['preview'],
    };
}

export function ScopePutToJSON(value?: ScopePut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'payload': ScopePayloadPutToJSON(value.payload),
        'population': ScopePopulationPutToJSON(value.population),
        'preview': value.preview,
    };
}

