/* tslint:disable */
/* eslint-disable */
/**
 * Faraday REST API
 * The [Faraday](https://faraday.ai) API makes it easy to predict customer behavior programmatically.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@faraday.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Your account's PPD usage in monthly bins. This is the amount you will be charged for.
 * @export
 * @interface AccountUsage
 */
export interface AccountUsage {
    /**
     * the month bin for the given PPD.
     * @type {string}
     * @memberof AccountUsage
     */
    date: string;
    /**
     * The unit of measurement faraday uses to bill predictions.
     * PPD stands for person-predictions-per-day, 
     * and represents the total volume of prediction data for a given account.
     * The PPD of an account for any given day is calculated with the following formula:
     * 
     * ```
     * Account PPD = SUM(the number of people in your scopes * the number of outcomes and persona sets in the scope).
     * ```
     * 
     * The PPD of a given scope can change over time when:
     * 1. The payload of a scope changes (either outcomes or persona sets are added or removed)
     * 2. One or more of your datasets is updated
     * 
     * Your account is NOT charged for any scopes in "preview" mode.
     * @type {number}
     * @memberof AccountUsage
     */
    ppd?: number;
}

export function AccountUsageFromJSON(json: any): AccountUsage {
    return AccountUsageFromJSONTyped(json, false);
}

export function AccountUsageFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountUsage {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'date': json['date'],
        'ppd': !exists(json, 'ppd') ? undefined : json['ppd'],
    };
}

export function AccountUsageToJSON(value?: AccountUsage | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'date': value.date,
        'ppd': value.ppd,
    };
}

