/* tslint:disable */
/* eslint-disable */
/**
 * Faraday REST API
 * The [Faraday](https://faraday.ai) API makes it easy to predict customer behavior programmatically.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@faraday.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ModelingField,
    ModelingFieldFromJSON,
    ModelingFieldFromJSONTyped,
    ModelingFieldToJSON,
} from './ModelingField';
import {
    Persona,
    PersonaFromJSON,
    PersonaFromJSONTyped,
    PersonaToJSON,
} from './Persona';
import {
    ResourceStatus,
    ResourceStatusFromJSON,
    ResourceStatusFromJSONTyped,
    ResourceStatusToJSON,
} from './ResourceStatus';

/**
 * A set of customer personas.
 * @export
 * @interface PersonaSet
 */
export interface PersonaSet {
    /**
     * Is the related cohort using this as the primary persona set?
     * @type {boolean}
     * @memberof PersonaSet
     */
    active?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PersonaSet
     */
    cohort_id: string;
    /**
     * When this resource was created.
     * @type {Date}
     * @memberof PersonaSet
     */
    created_at: Date;
    /**
     * Whether to show the persona set in Explore, the map view on https://app.faraday.ai.
     * 
     * This will slow down persona set builds.
     * @type {boolean}
     * @memberof PersonaSet
     */
    explore?: boolean;
    /**
     * A unique ID for this resource.
     * @type {string}
     * @memberof PersonaSet
     */
    id: string;
    /**
     * The last time this resource's input was read.
     * @type {Date}
     * @memberof PersonaSet
     */
    last_read_input_at?: Date;
    /**
     * The last time this resource's configuration was updated. If this is more recent than last_updated_output_at, the resource will be rebuilt.
     * @type {Date}
     * @memberof PersonaSet
     */
    last_updated_config_at?: Date;
    /**
     * The last time this resource successfully built.
     * @type {Date}
     * @memberof PersonaSet
     */
    last_updated_output_at?: Date;
    /**
     * Specify customer attributes to use in modeling
     * @type {Array<ModelingField>}
     * @memberof PersonaSet
     */
    modeling_fields?: Array<ModelingField>;
    /**
     * Human-readable label for this persona set.
     * @type {string}
     * @memberof PersonaSet
     */
    name: string;
    /**
     * Specify the exact number of clusters (i.e. personas) there should be in the persona set.
     * 
     * By default, the optimal value for this parameter is determined automatically.
     * 
     * Setting this requires external knowledge and should only be done when the use-case necessitates a specific number of clusters.
     * @type {number}
     * @memberof PersonaSet
     */
    number_of_clusters?: number;
    /**
     * The personas that belong to this persona set
     * @type {Array<Persona>}
     * @memberof PersonaSet
     */
    personas?: Array<Persona>;
    /**
     * The type of this resource.
     * @type {string}
     * @memberof PersonaSet
     */
    resource_type: string;
    /**
     * 
     * @type {ResourceStatus}
     * @memberof PersonaSet
     */
    status: ResourceStatus;
    /**
     * When the status of this resource was last updated.
     * @type {Date}
     * @memberof PersonaSet
     */
    status_changed_at?: Date;
    /**
     * If this resource has `status == "error"`, this will contain an error message.
     * @type {string}
     * @memberof PersonaSet
     */
    status_error?: string;
    /**
     * When this resource was last updated.
     * @type {Date}
     * @memberof PersonaSet
     */
    updated_at: Date;
}

export function PersonaSetFromJSON(json: any): PersonaSet {
    return PersonaSetFromJSONTyped(json, false);
}

export function PersonaSetFromJSONTyped(json: any, ignoreDiscriminator: boolean): PersonaSet {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'active': !exists(json, 'active') ? undefined : json['active'],
        'cohort_id': json['cohort_id'],
        'created_at': (new Date(json['created_at'])),
        'explore': !exists(json, 'explore') ? undefined : json['explore'],
        'id': json['id'],
        'last_read_input_at': !exists(json, 'last_read_input_at') ? undefined : (new Date(json['last_read_input_at'])),
        'last_updated_config_at': !exists(json, 'last_updated_config_at') ? undefined : (new Date(json['last_updated_config_at'])),
        'last_updated_output_at': !exists(json, 'last_updated_output_at') ? undefined : (new Date(json['last_updated_output_at'])),
        'modeling_fields': !exists(json, 'modeling_fields') ? undefined : ((json['modeling_fields'] as Array<any>).map(ModelingFieldFromJSON)),
        'name': json['name'],
        'number_of_clusters': !exists(json, 'number_of_clusters') ? undefined : json['number_of_clusters'],
        'personas': !exists(json, 'personas') ? undefined : ((json['personas'] as Array<any>).map(PersonaFromJSON)),
        'resource_type': json['resource_type'],
        'status': ResourceStatusFromJSON(json['status']),
        'status_changed_at': !exists(json, 'status_changed_at') ? undefined : (new Date(json['status_changed_at'])),
        'status_error': !exists(json, 'status_error') ? undefined : json['status_error'],
        'updated_at': (new Date(json['updated_at'])),
    };
}

export function PersonaSetToJSON(value?: PersonaSet | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'active': value.active,
        'cohort_id': value.cohort_id,
        'created_at': (value.created_at.toISOString()),
        'explore': value.explore,
        'id': value.id,
        'last_read_input_at': value.last_read_input_at === undefined ? undefined : (value.last_read_input_at.toISOString()),
        'last_updated_config_at': value.last_updated_config_at === undefined ? undefined : (value.last_updated_config_at.toISOString()),
        'last_updated_output_at': value.last_updated_output_at === undefined ? undefined : (value.last_updated_output_at.toISOString()),
        'modeling_fields': value.modeling_fields === undefined ? undefined : ((value.modeling_fields as Array<any>).map(ModelingFieldToJSON)),
        'name': value.name,
        'number_of_clusters': value.number_of_clusters,
        'personas': value.personas === undefined ? undefined : ((value.personas as Array<any>).map(PersonaToJSON)),
        'resource_type': value.resource_type,
        'status': ResourceStatusToJSON(value.status),
        'status_changed_at': value.status_changed_at === undefined ? undefined : (value.status_changed_at.toISOString()),
        'status_error': value.status_error,
        'updated_at': (value.updated_at.toISOString()),
    };
}

