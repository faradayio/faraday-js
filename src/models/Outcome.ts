/* tslint:disable */
/* eslint-disable */
/**
 * Faraday REST API
 * The [Faraday](https://faraday.ai) SDK makes it easy to predict customer behavior using a simple API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ResourceStatus,
    ResourceStatusFromJSON,
    ResourceStatusFromJSONTyped,
    ResourceStatusToJSON,
} from './ResourceStatus';

/**
 * A model describing how likely a group of people are to transition from one cohort to another (for example, from a prospect to a customer).
 * @export
 * @interface Outcome
 */
export interface Outcome {
    /**
     * A cohort of people who have attained the desired outcome (for example, if predicting transition from prospect to customer, the attainment cohort should be existing customers).
     * @type {string}
     * @memberof Outcome
     */
    attainmentCohortId: string;
    /**
     * Human-readable label of the attainment cohort. See /cohorts/{attainment_cohort_id} to edit the attainment cohort or view additional details.
     * @type {string}
     * @memberof Outcome
     */
    attainmentCohortName?: string;
    /**
     * A cohort of counterexamples - people who have clearly failed to attain the outcome, as opposed to simply being indeterminate. This cohort is optional.
     * @type {string}
     * @memberof Outcome
     */
    attritionCohortId?: string;
    /**
     * Human-readable label of the attrition cohort. See /cohorts/{attrition_cohort_id} to edit the attrition cohort or view additional details.
     * @type {string}
     * @memberof Outcome
     */
    attritionCohortName?: string;
    /**
     * When this resource was created.
     * @type {Date}
     * @memberof Outcome
     */
    createdAt: Date;
    /**
     * A cohort of people who could attain or attrite the desired outcome (for example, if predicting transition from prospect to customer, the eligible cohort should be prospects). If no eligible cohort is specified, the model will use the US population as the eligible cohort.
     * @type {string}
     * @memberof Outcome
     */
    eligibleCohortId?: string;
    /**
     * Human-readable label of the eligibility cohort. See /cohorts/{eligible_cohort_id} to edit the eligible cohort or view additional details.
     * @type {string}
     * @memberof Outcome
     */
    eligibleCohortName?: string;
    /**
     * A unique ID for this resource.
     * @type {string}
     * @memberof Outcome
     */
    id: string;
    /**
     * Human-readable label for this outcome
     * @type {string}
     * @memberof Outcome
     */
    name?: string;
    /**
     * The type of this resource.
     * @type {string}
     * @memberof Outcome
     */
    resourceType: string;
    /**
     * The area under the receiver operating characteristic curve. Typically, the higher the ROC AUC, the better the model.
     * @type {number}
     * @memberof Outcome
     */
    rocAuc?: number;
    /**
     * 
     * @type {ResourceStatus}
     * @memberof Outcome
     */
    status: ResourceStatus;
    /**
     * When the status of this resource was last updated.
     * @type {Date}
     * @memberof Outcome
     */
    statusChangedAt?: Date;
    /**
     * If this resource has `status == "error"`, this will contain an error message.
     * @type {string}
     * @memberof Outcome
     */
    statusError?: string;
    /**
     * When this resource was last updated.
     * @type {Date}
     * @memberof Outcome
     */
    updatedAt: Date;
}

export function OutcomeFromJSON(json: any): Outcome {
    return OutcomeFromJSONTyped(json, false);
}

export function OutcomeFromJSONTyped(json: any, ignoreDiscriminator: boolean): Outcome {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'attainmentCohortId': json['attainment_cohort_id'],
        'attainmentCohortName': !exists(json, 'attainment_cohort_name') ? undefined : json['attainment_cohort_name'],
        'attritionCohortId': !exists(json, 'attrition_cohort_id') ? undefined : json['attrition_cohort_id'],
        'attritionCohortName': !exists(json, 'attrition_cohort_name') ? undefined : json['attrition_cohort_name'],
        'createdAt': (new Date(json['created_at'])),
        'eligibleCohortId': !exists(json, 'eligible_cohort_id') ? undefined : json['eligible_cohort_id'],
        'eligibleCohortName': !exists(json, 'eligible_cohort_name') ? undefined : json['eligible_cohort_name'],
        'id': json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'resourceType': json['resource_type'],
        'rocAuc': !exists(json, 'roc_auc') ? undefined : json['roc_auc'],
        'status': ResourceStatusFromJSON(json['status']),
        'statusChangedAt': !exists(json, 'status_changed_at') ? undefined : (new Date(json['status_changed_at'])),
        'statusError': !exists(json, 'status_error') ? undefined : json['status_error'],
        'updatedAt': (new Date(json['updated_at'])),
    };
}

export function OutcomeToJSON(value?: Outcome | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'attainment_cohort_id': value.attainmentCohortId,
        'attainment_cohort_name': value.attainmentCohortName,
        'attrition_cohort_id': value.attritionCohortId,
        'attrition_cohort_name': value.attritionCohortName,
        'created_at': (value.createdAt.toISOString()),
        'eligible_cohort_id': value.eligibleCohortId,
        'eligible_cohort_name': value.eligibleCohortName,
        'id': value.id,
        'name': value.name,
        'resource_type': value.resourceType,
        'roc_auc': value.rocAuc,
        'status': ResourceStatusToJSON(value.status),
        'status_changed_at': value.statusChangedAt === undefined ? undefined : (value.statusChangedAt.toISOString()),
        'status_error': value.statusError,
        'updated_at': (value.updatedAt.toISOString()),
    };
}

